var files={"mojo.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>mojo</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The mojo modules provide a lightweight programming framework designed primarily for creating simple 2d games.</p><br><p>Mojo applications must extend the mojo <b>App</b> class and create a new instance of this class somewhere inside the monkey Main() function. This is what actually creates the application.</p><br><p>All data for mojo programs (images, sounds and text files) must go into a special data directory. This directory has the same name as the program's main source file, only with a '.data' extension instead of '.monkey'. For example, if your main source file is called 'joust2k.monkey', then  your data directory should be name 'joust2k.data'.</p><br><p>Mojo functions should not be called until your application's OnCreate method is called. This means you cannot initialize global variables with values returned by mojo functions such as MilliSecs - you must instead initialize such variables in your application's OnCreate method or later.</p><br><p>To import all the mojo modules into your program, simply use:<pre>\\nImport mojo\\n</pre>\\n</p><br><p>This will automatically import the mojo.app, mojo.graphics, mojo.audio and mojo.input modules for you in one hit.</p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.contents":"{}",
"mojo.app.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.app\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>mojo.app</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The app module contains the <b>App</b> class along with various support functions for controlling application behaviour.</p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.app.contents":"{\"functions\":[{\"name\":\"LoadState\",\"link\":\"LoadState\"},{\"name\":\"LoadString\",\"link\":\"LoadString\"},{\"name\":\"Millisecs\",\"link\":\"Millisecs\"},{\"name\":\"SaveState\",\"link\":\"SaveState\"},{\"name\":\"SetUpdateRate\",\"link\":\"SetUpdateRate\"}],\"classes\":[{\"name\":\"App\",\"link\":\"App\"},{\"name\":\"App.OnCreate\",\"link\":\"App.OnCreate\"},{\"name\":\"App.OnLoading\",\"link\":\"App.OnLoading\"},{\"name\":\"App.OnRender\",\"link\":\"App.OnRender\"},{\"name\":\"App.OnUpdate\",\"link\":\"App.OnUpdate\"}]}",
"mojo.app.App":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.app\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"App\",\n\t\t\t\"link\": \"App\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>App</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>This is the main application class.</p><br><p>All mojo based applications must declare a class that extends <b>App</b> and that implements the <b>OnCreate</b>, <b>OnUpdate</b>, <b>OnRender</b> and <b>OnLoading</b> methods.</p><br><p>A new instance of this class must be then created inside your applications <b>Main</b> function. The <b>OnCreate</b>, <b>OnUpdate</b>, <b>OnRender</b> and <b>OnLoading</b> methods will be called as necessary while your application runs.</p><br><p><b>OnCreate</b> is called when mojo has been initialized and your app can safely start using mojo functions. This is generally where code to load resources such and images and sounds goes. This is where the application's update rate is initially set too - see: <b>SetUpdateRate</b>.</p><br><p><b>OnUpdate</b> is called when the update timer ticks, and is where your game logic code should go. The update timer is set using the <b>SetUpdateRate</b> function.</p><br><p><b>OnRender</b> is called when your application should render itself. If the update timer is ticking, this is also called as soon as possible after <b>OnUpdate</b>, however <b>OnRender</b> may be called at any time in generally if your application requires refreshing.</p><br><p><b>OnLoading</b> is called insetad of <b>OnRender</b> when your application should render itself, but there are still resources being loaded.</p><br><p>Import note: </p><br><p>No mojo functions or methods should be used before <b>OnCreate</b> is called! Before this, mojo is not fully initialized and cannot be safely used. This means that global variables cannot be initialied using <b>Millisecs</b>, <b>LoadImage</b> or indeed ANY mojo functions.</p>\",\"example\":\"<p><pre>\\nImport mojo.app\\n\\nClass MyApp Extends App\\n\\n\\tMethod OnCreate()\\n\\t\\tPrint \\\"App succesfully created!\\\"\\n\\tEnd\\n\\nEnd\\n\\nFunction Main()\\n\\tPrint \\\"Creating new app...\\\"\\n\\tNew MyApp\\nEnd\\n</pre>\\n</p>\",\"example 2\":\"<p><pre>\\nImport mojo.app\\nImport mojo.graphics\\nImport mojo.input\\n\\nClass MyGame Extends App\\n\\tField x:Int=0\\n\\tField y:Int=0\\n\\t\\n\\tMethod OnCreate()\\n\\t\\t'Load any graphics or sounds here\\n\\t\\tSetUpdateRate 30\\n\\tEnd\\n\\t\\n\\tMethod OnUpdate()\\n\\t\\tx=MouseX\\n\\t\\ty=MouseY\\n\\tEnd\\n\\t\\n\\tMethod OnRender()\\n\\t\\tCls (0,0,0)\\n\\t\\tDrawText \\\"Hello World!\\\",x,y\\n\\tEnd\\nEnd\\n\\nFunction Main()\\n\\tNew MyGame\\nEnd\\n</pre>\\n</p>\"\n\t\t}\n\t]\n}\n",
"mojo.app.App.OnCreate":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.app\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"App.OnCreate\",\n\t\t\t\"link\": \"App.OnCreate\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>OnCreate</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>OnCreate</b>()</p>\",\"description\":\"<p>The <b>OnCreate</b> method is called when mojo has been initialized and the application has been successfully created.</p><br><p>At this point, applications can start loading resources such as images and sounds, and set the update rate using <b>SetUpdateRate</b>.</p>\",\"example\":\"<p><pre>\\nImport mojo.app\\nImport mojo.graphics\\nImport mojo.input\\n\\nClass MyGame Extends App\\n\\tField x:Int=0\\n\\tField y:Int=0\\n\\tField playerShipSprite:Image\\n\\t\\t\\n\\tMethod OnCreate()\\n\\n\\t\\t'Load any images and sounds here\\n\\t\\t'ship.png must be found in your project's .data folder\\n\\t\\tplayerShipSprite=LoadImage(\\\"ship.png\\\")\\n\\n\\t\\tSetUpdateRate 30\\n\\n\\t\\tEnd\\n\\t\\n\\tMethod OnUpdate()\\n\\t\\tx=MouseX\\n\\t\\ty=MouseY\\n\\tEnd\\n\\t\\n\\tMethod OnRender()\\n\\t\\tCls\\n\\t\\tDrawImage playerShipSprite,x,y\\n\\tEnd\\nEnd\\n\\nFunction Main()\\n\\tNew MyGame\\nEnd\\n</pre>\\n</p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.app.App.OnLoading":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.app\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"App.OnLoading\",\n\t\t\t\"link\": \"App.OnLoading\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>OnLoading</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>OnLoading</b>()</p>\",\"description\":\"<p>This method is called instead of <b>OnRender</b> when the application should render itself, but there are still resources such as images or sounds in the process of being loaded.</p>\",\"see also\":\"<p><b>OnRender</b></p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.app.App.OnRender":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.app\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"App.OnRender\",\n\t\t\t\"link\": \"App.OnRender\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>OnRender</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>OnRender</b>()</p>\",\"description\":\"<p>This method is automatically called when the application should render itself, such as when the application first starts, or following an <b>OnUpdate</b> call.</p><br><p>If your application is taking to long to update and/render itself, <b>OnRender</b> calls may be skipped to allow it to 'catch up'.</p>\",\"see also\":\"<p><b>OnUpdate</b>, <b>OnLoading</b></p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.app.App.OnUpdate":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.app\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"App.OnUpdate\",\n\t\t\t\"link\": \"App.OnUpdate\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>OnUpdate</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>OnUpdate</b>()</p>\",\"description\":\"<p>This method is automatically called when the application's update timer ticks. Once <b>OnUpdate</b> has been called, mojo will then attempt to call <b>OnRender</b> as soon as possible.</p><br><p>Note that <b>OnUpdate</b> is only called if <b>SetUpdateRate</b> has been called to start the update timer. Otherwise, your application will receive <b>OnRender</b> calls only.</p><br><p><b>OnUpdate</b> is commonly used in conjunction with <b>OnRender</b> to manage the main game loop. <b>OnUpdate</b> is typically used to update objects and game state, while <b>OnRender</b> is used to draw graphics.  </p>\",\"see also\":\"<p><b>SetUpdateRate</b></p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.app.LoadState":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.app\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"LoadState\",\n\t\t\t\"link\": \"LoadState\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>LoadState</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>LoadState</b>:String()</p>\",\"description\":\"<p>Loads a string representing the application's persistant state as previously saved with <b>SaveState</b>.</p><br><p>If the application state hasn't yet been previously saved, <b>LoadState</b> returns an empty string.</p><br><p>This is generally used to store data such as user preferences and high score tables.</p><br><p>Note: <b>LoadState</b> is not currently support on the XNA Windows Phone 7 platform.</p>\",\"see also\":\"<p><b>SaveState</b></p>\",\"example\":\"<p><pre>\\n'run this app several times to see application state being updated.\\nImport mojo.app\\nImport mojo.graphics\\n\\nClass MyApp Extends App\\n\\n\\tField state$\\n\\t\\n\\tMethod OnCreate()\\n\\t\\n\\t\\t'comment out the following line to reset state\\n\\t\\tstate=LoadState()\\n\\n\\t\\tIf state\\n\\t\\t\\tPrint \\\"state found - updating state!\\\"\\n\\t\\t\\tstate=Int( state )+1\\n\\t\\tElse\\n\\t\\t\\tPrint \\\"state not found - creating initial state!\\\"\\n\\t\\t\\tstate=\\\"1\\\"\\n\\t\\tEndif\\n\\t\\t\\n\\t\\tSaveState state\\n\\tEnd\\n\\t\\n\\tMethod OnRender()\\n\\t\\tCls \\n\\t\\tDrawText \\\"state=\\\"+state,0,0\\n\\tEnd\\n\\t\\nEnd\\n\\nFunction Main()\\n\\tNew MyApp\\nEnd\\n</pre>\\n</p>\"\n\t\t}\n\t]\n}\n",
"mojo.app.LoadString":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.app\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"LoadString\",\n\t\t\t\"link\": \"LoadString\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>LoadString</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>LoadString</b>$( <b>path</b>$ )</p>\",\"parameters\":\"<p><b>path</b> - path of a file string to load as a string.</p>\",\"description\":\"<p>Returns the contents of a text file as a single string.  </p><br><p>The string can be of any length and may contain escape sequence characters (see the monkey Language Reference for a full list). For example, a text file could contain game data separated with line breaks which could be loaded as a string and then split into sub-strings.</p><br><p>Monkey will only load files that end with the following file extensions: .txt, .xml, .json.</p><br><p>Like all game data, text files must be saved in your project's .data folder or one of its sub-folders.</p>\",\"example\":\"<p><pre>\\n'Important! Needs a test.txt file in the .data directory!\\n'\\nImport mojo.app\\n\\nClass MyApp Extends App\\n\\n\\tMethod OnCreate()\\n\\n\\t\\tLocal str$=LoadString( \\\"test.txt\\\" )\\n\\t\\t\\n\\t\\tPrint \\\"str.Length=\\\"+str.Length\\n\\t\\t\\n\\t\\tFor Local line$=Eachin str.Split( \\\"~n\\\" )\\n\\t\\t\\tPrint \\\"line=\\\"+line\\n\\t\\tNext\\n\\t\\t\\n\\tEnd\\n\\t\\nEnd\\n\\nFunction Main()\\n\\tNew MyApp\\nEnd\\n</pre>\\n</p>\"\n\t\t}\n\t]\n}\n",
"mojo.app.Millisecs":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.app\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Millisecs\",\n\t\t\t\"link\": \"Millisecs\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Millisecs</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Millisecs</b>()</p>\",\"description\":\"<p>Returns the number milliseconds (thousandths of a second) the application has been running. Divide this by 1000.0 to get the number of seconds the applications has been running.  </p>\",\"example\":\"<p><pre>\\nImport mojo.app\\nImport mojo.graphics\\n\\nClass MyApp Extends App\\n\\n\\tMethod OnCreate()\\n\\t\\tSetUpdateRate 10\\n\\tEnd\\n\\t\\n\\tMethod OnRender()\\n\\t\\tCls 128,0,255\\n\\t\\tDrawText \\\"Application has been running for: \\\"+Millisecs()/1000.0+\\\" seconds.\\\",0,0\\n\\tEnd\\n\\t\\nEnd\\n\\nFunction Main()\\n\\tNew MyApp\\nEnd\\n</pre>\\n</p>\"\n\t\t}\n\t]\n}\n",
"mojo.app.SaveState":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.app\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"SaveState\",\n\t\t\t\"link\": \"SaveState\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>SaveState</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>SaveState</b>( <b>state</b>$ )</p>\",\"parameters\":\"<p><b>state</b> - application state to save.</p>\",\"description\":\"<p>Saves a string representing the application's persistant state.</p><br><p>This is generally used to store data such as user preferences and high score tables.</p><br><p>Note: <b>SaveState</b> is not currently support on the XNA Windows Phone 7 platform.</p>\",\"see also\":\"<p><b>LoadState</b></p>\"\n\t\t}\n\t]\n}\n",
"mojo.app.SetUpdateRate":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.app\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"SetUpdateRate\",\n\t\t\t\"link\": \"SetUpdateRate\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>SetUpdateRate</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>SetUpdateRate</b>( <b>hertz</b> )</p>\",\"parameters\":\"<p><b>hertz</b> - update rate in 'updates per second'</p>\",\"description\":\"<p>Sets the application's update rate.</p><br><p>This is the number of times per second that the application's <b>OnUpdate</b> method should be called. Commonly used update rates are 15, 30 or 60 updates per second.</p><br><p><b>OnRender</b> is also called at the same frequency if possible (after each <b>OnUpdate</b>), meaning <b>SetUpdateRate</b> effectively also sets the target frames per second.</p>\",\"see also\":\"<p><b>OnUpdate</b></p>\",\"example\":\"<p><pre>\\nImport mojo.app\\nImport mojo.graphics\\n\\nClass MyApp Extends App\\n\\n\\tField updates,updateRate\\n\\n\\tMethod OnCreate()\\n\\t\\tupdateRate=15\\n\\t\\tSetUpdateRate updateRate\\n\\tEnd\\n\\t\\n\\tMethod OnUpdate()\\n\\t\\tupdates+=1\\n\\t\\tIf updates=updateRate\\n\\t\\t\\tupdates=0\\n\\t\\t\\tupdateRate*=2\\n\\t\\t\\tIf updateRate=240 updateRate=15\\n\\t\\t\\tSetUpdateRate updateRate\\n\\t\\tEndif\\n\\t\\t\\n\\tEnd\\n\\t\\n\\tMethod OnRender()\\n\\t\\tCls 128,0,255\\n\\t\\tDrawText \\\"updateRate=\\\"+updateRate+\\\", updates=\\\"+updates,0,0\\n\\tEnd\\n\\t\\nEnd\\n\\nFunction Main()\\n\\tNew MyApp\\nEnd\\n</pre>\\n</p>\"\n\t\t}\n\t]\n}\n",
"mojo.audio.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.audio\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>mojo.audio</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The audio module contains functions for loading and playing sounds.</p><br><p>It uses a simple 'fixed' 32 channel model which allows you to play sounds through any one (or more) of 32 preset audio channels. Audio channels are identified by the use of integer ids in the range 0 to 31.</p><br><p>Commands that alter a channel's volume, pan and pitch can be used to either dynamically modify a playing sound, or used on a stopped changed to prepare playback properties.</p><br><p>Note that not all targets have equivalent audio capabilities. In particular:</p><br><p><b>HTML5</b>: ChannelPan and ChannelRate do nothing.</p><br><p><b>Flash</b>: ChannelRate does nothing.</p><br><p><b>Android</b>: ChannelState always returns -1, ie: 'unknown'.</p><br><p>Also, when designing for low performance hardware it's a good idea to try and minimize the number of channels used.</p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.audio.contents":"{\"functions\":[{\"name\":\"ChannelState\",\"link\":\"ChannelState\"},{\"name\":\"LoadSound\",\"link\":\"LoadSound\"},{\"name\":\"PlaySound\",\"link\":\"PlaySound\"},{\"name\":\"SetChannelPan\",\"link\":\"SetChannelPan\"},{\"name\":\"SetChannelRate\",\"link\":\"SetChannelRate\"},{\"name\":\"SetChannelVolume\",\"link\":\"SetChannelVolume\"},{\"name\":\"StopChannel\",\"link\":\"StopChannel\"}],\"classes\":[{\"name\":\"Sound\",\"link\":\"Sound\"}]}",
"mojo.audio.ChannelState":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.audio\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"ChannelState\",\n\t\t\t\"link\": \"ChannelState\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>ChannelState</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>ChannelState</b>( <b>channel</b> )</p>\",\"parameters\":\"<p><b>channel</b> - an audio channel in the range 0 to 31.</p>\",\"description\":\"<p>Returns the state of the specified audio channel: 1 if the channel is currently playing, 0 if the channel is currently not playing or -1 if the channel state cannot be determined.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.audio.LoadSound":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.audio\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"LoadSound\",\n\t\t\t\"link\": \"LoadSound\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>LoadSound</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>LoadSound</b>:Sound( <b>path</b>$ )</p>\",\"parameters\":\"<p><b>path</b> - file path of the sound to load.</p>\",\"description\":\"<p>Loads and returns a sound object.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.audio.PlaySound":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.audio\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"PlaySound\",\n\t\t\t\"link\": \"PlaySound\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>PlaySound</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>PlaySound</b>( <b>sound</b>:Sound, <b>channel</b>=0, <b>flags</b>=0 )</p>\",\"parameters\":\"<p><b>sound</b> - a sound object.</p><br><p><b>channel</b> - an audio channel in the range 0 to 31</p><br><p><b>flags</b> - looping flags</p>\",\"description\":\"<p>Plays a sound through the specified channel.</p><br><p><b>flags</b> should be 1 to loop the sound, 0 to play it just once.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.audio.SetChannelPan":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.audio\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"SetChannelPan\",\n\t\t\t\"link\": \"SetChannelPan\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>SetChannelPan</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>SetChannelPan</b>( <b>channel</b>, <b>pan</b># )</p>\",\"parameters\":\"<p><b>channel</b> - an audio channel in the range 0 to 31.</p><br><p><b>pan</b> - a pan setting in the range -1 to +1, with -1 begin 'full left' and +1 being 'full right'.</p>\",\"description\":\"<p>Sets the pan of the specified audio channel.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.audio.SetChannelRate":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.audio\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"SetChannelRate\",\n\t\t\t\"link\": \"SetChannelRate\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>SetChannelRate</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>SetChannelRate</b>( <b>channel</b>, <b>rate</b># )</p>\",\"parameters\":\"<p><b>channel</b> - an audio channel in the range 0 to 31.</p><br><p><b>rate</b> - a playback rate in the range .5 to 2, with .5 being an octave lower and 2 being an octave higher.</p>\",\"description\":\"<p>Sets the playback rate of the specified audio channel. </p><br><p>This will affect the pitch of the sound being played.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.audio.SetChannelVolume":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.audio\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"SetChannelVolume\",\n\t\t\t\"link\": \"SetChannelVolume\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>SetChannelVolume</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>SetChannelVolume</b>( <b>channel</b>, <b>volume</b># )</p>\",\"parameters\":\"<p><b>channel</b> - an audio channel in the range 0 to 31.</p><br><p><b>volume</b> - a volume setting in the range 0 to 1, with 0 being silent and 1 being full volume.</p>\",\"description\":\"<p>Sets the volume of the specified audio channel.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.audio.Sound":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.audio\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Sound\",\n\t\t\t\"link\": \"Sound\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>Sound</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>Sound objects contain audio data preloaded from files.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.audio.StopChannel":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.audio\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"StopChannel\",\n\t\t\t\"link\": \"StopChannel\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>StopChannel</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>StopChannel</b>( <b>channel</b> )</p>\",\"parameters\":\"<p><b>channel</b> - an audio channel in the range 0 to 31.</p>\",\"description\":\"<p>Stops the specified audio channel.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>mojo.graphics</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The graphics module contains various functions that allow you to draw 2D graphics on all monkey target platforms.</p><br><p>Transparency effects can be achieved using <b>SetAlpha</b> to set the global alpha level, and fullscreen rotation and scaling effects can be achieved using the various matrix commands such as <b>Translate</b>, <b>Rotate</b> and <b>Scale</b>.</p><br><p>The graphics module is state based, and commands that 'set' various states will remain in effect until a subsequent 'set' modifies the state.</p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.graphics.contents":"{\"functions\":[{\"name\":\"Cls\",\"link\":\"Cls\"},{\"name\":\"DeviceHeight\",\"link\":\"DeviceHeight\"},{\"name\":\"DeviceWidth\",\"link\":\"DeviceWidth\"},{\"name\":\"DrawCircle\",\"link\":\"DrawCircle\"},{\"name\":\"DrawEllipse\",\"link\":\"DrawEllipse\"},{\"name\":\"DrawImage\",\"link\":\"DrawImage\"},{\"name\":\"DrawImageRect\",\"link\":\"DrawImageRect\"},{\"name\":\"DrawLine\",\"link\":\"DrawLine\"},{\"name\":\"DrawOval\",\"link\":\"DrawOval\"},{\"name\":\"DrawRect\",\"link\":\"DrawRect\"},{\"name\":\"DrawText\",\"link\":\"DrawText\"},{\"name\":\"GetAlpha\",\"link\":\"GetAlpha\"},{\"name\":\"GetBlend\",\"link\":\"GetBlend\"},{\"name\":\"GetColor\",\"link\":\"GetColor\"},{\"name\":\"GetFont\",\"link\":\"GetFont\"},{\"name\":\"GetMatrix\",\"link\":\"GetMatrix\"},{\"name\":\"GetScissor\",\"link\":\"GetScissor\"},{\"name\":\"LoadImage\",\"link\":\"LoadImage\"},{\"name\":\"PopMatrix\",\"link\":\"PopMatrix\"},{\"name\":\"PushMatrix\",\"link\":\"PushMatrix\"},{\"name\":\"Rotate\",\"link\":\"Rotate\"},{\"name\":\"Scale\",\"link\":\"Scale\"},{\"name\":\"SetAlpha\",\"link\":\"SetAlpha\"},{\"name\":\"SetBlend\",\"link\":\"SetBlend\"},{\"name\":\"SetColor\",\"link\":\"SetColor\"},{\"name\":\"SetFont\",\"link\":\"SetFont\"},{\"name\":\"SetMatrix\",\"link\":\"SetMatrix\"},{\"name\":\"SetScissor\",\"link\":\"SetScissor\"},{\"name\":\"Transform\",\"link\":\"Transform\"},{\"name\":\"Translate\",\"link\":\"Translate\"}],\"classes\":[{\"name\":\"Image\",\"link\":\"Image\"},{\"name\":\"Image.DefaultFlags\",\"link\":\"Image.DefaultFlags\"},{\"name\":\"Image.Frames\",\"link\":\"Image.Frames\"},{\"name\":\"Image.GrabImage\",\"link\":\"Image.GrabImage\"},{\"name\":\"Image.HandleX\",\"link\":\"Image.HandleX\"},{\"name\":\"Image.HandleY\",\"link\":\"Image.HandleY\"},{\"name\":\"Image.Height\",\"link\":\"Image.Height\"},{\"name\":\"Image.SetHandle\",\"link\":\"Image.SetHandle\"},{\"name\":\"Image.Width\",\"link\":\"Image.Width\"}]}",
"mojo.graphics.Cls":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Cls\",\n\t\t\t\"link\": \"Cls\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Cls</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Cls</b>( <b>color</b>:Color )</p><br><p>Function <b>Cls</b>( <b>red</b>#=0, <b>green</b>#=0, <b>blue</b>#=0 )</p><br><p>Function <b>Cls</b>( <b>argb</b> )</p>\",\"parameters\":\"<p><b>color</b> - a Color object.</p><br><p><b>red</b>, <b>green</b>, <b>blue</b> - color components in the range 0 to 255.</p><br><p><b>argb</b> - a packed ARGB color.</p>\",\"description\":\"<p>Clears the graphics device to the specified color.</p><br><p>The current color, alpha and blend mode are ignored by <b>Cls</b>. However, the scissor rect is still used so only the area inside the scissor rect is cleared.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.DeviceHeight":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"DeviceHeight\",\n\t\t\t\"link\": \"DeviceHeight\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>DeviceHeight</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>DeviceHeight</b>()</p>\",\"description\":\"<p>Returns the height of the graphics device as an integer.</p><br><p>Please npte that you cannot directly control the size of the graphics device via mojo. This must be done by editing the 'native' project code for the target.</p>\",\"see also\":\"<p><b>DeviceWidth</b></p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.DeviceWidth":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"DeviceWidth\",\n\t\t\t\"link\": \"DeviceWidth\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>DeviceWidth</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>DeviceWidth</b>()</p>\",\"description\":\"<p>Returns the width of the graphics device as an integer.</p><br><p>Note that you cannot directly control the size of the graphics device via mojo. This must be done by editting the 'native' project code for the target.</p>\",\"see also\":\"<p><b>DeviceHeight</b></p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.DrawCircle":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"DrawCircle\",\n\t\t\t\"link\": \"DrawCircle\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>DrawCircle</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>DrawCircle</b>( <b>x</b>#, <b>y</b>#, <b>radius</b># )</p>\",\"parameters\":\"<p><b>x</b>, <b>y</b> - coordinates of the center of the circle.</p><br><p><b>radius</b> - radius of the circle.</p>\",\"decscription\":\"<p>Draws a circle of radius <b>radius</b> at coordinates <b>x</b>, <b>y</b>.</p><br><p>The circle is drawn using the current color, alpha, blend mode and matrix, and is clipped to the current scissor rectangle.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.DrawEllipse":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"DrawEllipse\",\n\t\t\t\"link\": \"DrawEllipse\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>DrawEllipse</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>DrawEllipse</b>( <b>x</b>#, <b>y</b>#, <b>xRadius</b>#, <b>yRadius</b># )</p>\",\"parameters\":\"<p><b>x</b>, <b>y</b> - coordinates of the center of the ellipse.</p><br><p><b>xRadius</b>, <b>yRadius</b> - horizontal and vertical radii of the ellipse.</p>\",\"decscription\":\"<p>Draws an ellipse of radii <b>xRadius</b>, <b>yRadius</b> at coordinates <b>x</b>, <b>y</b>.</p><br><p>The ellipse is drawn using the current color, alpha, blend mode and matrix, and is clipped to the current scissor rectangle.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.DrawImage":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"DrawImage\",\n\t\t\t\"link\": \"DrawImage\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>DrawImage</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>DrawImage</b>( <b>image</b>:Image, <b>x</b>#, <b>y</b>#, <b>frame</b>=0 )</p><br><p>Function <b>DrawImage</b>( <b>image</b>:Image, <b>x</b>#, <b>y</b>#, <b>rotation</b>#, <b>scaleX</b>#, <b>scaleY</b>#, <b>frame</b>=0 )</p>\",\"parameters\":\"<p><b>image</b> - image to draw.</p><br><p><b>x</b>, <b>y</b> - coordinates to draw image at.</p><br><p><b>rotation</b> - local image rotation in degrees.</p><br><p><b>scaleX</b>, <b>scaleY</b> - local image scale.</p>\",\"description\":\"<p>Draws an image at coordinates <b>x</b>, <b>y</b>, offset by the image's handle.</p><br><p>The image is drawn using the current alpha, blend mode and matrix, and is clipped to the current scissor rectangle.</p><br><p>The <b>rotation</b> and <b>scaleX</b>, <b>scaleY</b> parameters provide a convenient way for you to 'locally' rotate and scale the image.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.DrawImageRect":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"DrawImageRect\",\n\t\t\t\"link\": \"DrawImageRect\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>DrawImageRect</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>DrawImageRect</b>( <b>image</b>:Image, <b>x</b>#, <b>y</b>#, <b>srcX</b>, <b>srcY</b>, <b>srcWidth</b>, <b>srcHeight</b>, <b>frame</b>=0 )</p><br><p>Function <b>DrawImageRect</b>( <b>image</b>:Image, <b>x</b>#, <b>y</b>#, <b>srcX</b>, <b>srcY</b>, <b>srcWidth</b>, <b>srcHeight</b>, <b>rotation</b>#, <b>scaleX</b>#, <b>scaleY</b>#, <b>frame</b>=0 )</p>\",\"parameters\":\"<p><b>image</b> - image to draw.</p><br><p><b>x</b>, <b>y</b> - coordinates to draw image at.</p><br><p><b>srcRect</b> - source rectangle.</p><br><p><b>srcX</b>, <b>srcY</b>, <b>srcWidth</b>, <b>srcHeight</b> - source rectangle.</p><br><p><b>rotation</b> - local image rotation in degrees.</p><br><p><b>scaleX</b>, <b>scaleY</b> - local image scale.</p>\",\"description\":\"<p>Draws a sub-rectangle of an image at coordinates <b>x</b>, <b>y</b>, offset by the image's handle.</p><br><p>The image is drawn using the current alpha, blend mode and matrix, and is clipped to the current scissor rectangle.</p><br><p>The <b>rotation</b> and <b>scaleX</b>, <b>scaleY</b> parameters provide a convenient way for you to 'locally' rotate and scale the image.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.DrawLine":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"DrawLine\",\n\t\t\t\"link\": \"DrawLine\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>DrawLine</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>DrawLine</b>( <b>x1</b>#, <b>y1</b>#, <b>x2</b>#, <b>y2</b># )</p>\",\"parameters\":\"<p><b>x1</b>, <b>y1</b> - the start coordinates of the line.</p><br><p><b>x2</b>, <b>y2</b> - the end coordinates of the line.</p>\",\"description\":\"<p>Draws a line from <b>x1</b>, <b>y1</b> to <b>x2</b>, <b>y2</b>.</p><br><p>The line is drawn using the current color, alpha, blend mode and matrix, and is clipped to the current scissor rectangle.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.DrawOval":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"DrawOval\",\n\t\t\t\"link\": \"DrawOval\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>DrawOval</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>DrawOval</b>( <b>x</b>#, <b>y</b>#, <b>width</b>#, <b>height</b># )</p>\",\"parameters\":\"<p><b>x</b>, <b>y</b>\\t\\t\\t- coordinates of the top-left of the oval.</p><br><p><b>width</b>, <b>height</b>\\t- width and height of the oval.</p>\",\"description\":\"<p>Draws an oval of size <b>width</b>, <b>height</b> at coordinates <b>x</b>, <b>y</b>.</p><br><p>The oval is drawn using the current color, alpha, blend mode and matrix, and is clipped to the current scissor rectangle.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.DrawRect":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"DrawRect\",\n\t\t\t\"link\": \"DrawRect\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>DrawRect</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>DrawRect</b>( <b>x</b>#, <b>y</b>#, <b>width</b>#, <b>height</b># )</p>\",\"parameters\":\"<p><b>x</b>, <b>y</b>\\t\\t\\t- coordinates of the top-left of the rectangle.</p><br><p><b>width</b>, <b>height</b>\\t- width and height of the rectangle.</p>\",\"description\":\"<p>Draws a rectangle of size <b>width</b>, <b>height</b> at the coordinates <b>x</b>, <b>y</b>.</p><br><p>The rectangle is drawn using the current color, alpha, blend mode and matrix, and is clipped to the current scissor rectangle.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.DrawText":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"DrawText\",\n\t\t\t\"link\": \"DrawText\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>DrawText</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>DrawText</b>( <b>text</b>$, <b>x</b>, <b>y</b>, <b>xalign</b>=0, <b>yalign</b>=0 )</p>\",\"parameters\":\"<p><b>text</b> - the text to draw.</p><br><p><b>x</b>, <b>y</b> - coordinates to draw the text at.</p><br><p><b>xalign</b>, <b>yalign</b> - how to align the text.</p>\",\"description\":\"<p>Draws <b>text</b> at coordinates <b>x</b>, <b>y</b> in the current font.</p><br><p>The current font may be modified using SetFont. By default, an internal 7 x 13 white-on-black font is used.</p><br><p><b>xalign</b> and <b>yalign</b> allow you to control the alignment of the text and should be in the range 0 for left/top alignment to 1 for right/bottom alignment. A value of .5 can be used for centering text horizontally or vertically.</p><br><p>Note: The font functionality in mojo is very limited and intended mainly for debugging purposes.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.GetAlpha":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"GetAlpha\",\n\t\t\t\"link\": \"GetAlpha\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>GetAlpha</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>GetAlpha</b>#()</p>\",\"description\":\"<p>Returns the current alpha level.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.GetBlend":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"GetBlend\",\n\t\t\t\"link\": \"GetBlend\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>GetBlend</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>GetBlend</b>()</p>\",\"description\":\"<p>Returns the current blend mode.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.GetColor":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"GetColor\",\n\t\t\t\"link\": \"GetColor\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>GetColor</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>GetColor</b>:Float[]()</p>\",\"description\":\"<p>Returns the current color as a 3 component float array containg the current color's red, green and blue components respectively.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.GetFont":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"GetFont\",\n\t\t\t\"link\": \"GetFont\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>GetFont</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>GetFont</b>:Image()</p>\",\"description\":\"<p>Returns the current font.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.GetMatrix":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"GetMatrix\",\n\t\t\t\"link\": \"GetMatrix\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>GetMatrix</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>GetMatrix</b>:Float[]()</p>\",\"description\":\"<p>Returns the current matrix as an array of floats.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.GetScissor":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"GetScissor\",\n\t\t\t\"link\": \"GetScissor\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>GetScissor</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>GetScissor</b>:Float[]()</p>\",\"description\":\"<p>Returns the current scissor rectangle as a 4 component float array containg the scissor rectangle's x,y, width and height coordinates respectively.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.Image":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Image\",\n\t\t\t\"link\": \"Image\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>Image</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>An image is a rectangular area of pixels, loaded from an image file with <b>LoadImage</b> or grabbed from another image with <b>GrabImage</b>.</p><br><p>Images can be drawn with <b>DrawImage</b> or <b>DrawImageRect</b>.</p><br><p>Images have a width, a height and a handle. A handle is a 'local origin' which allows you to control the centre point of an image when drawing it.</p><br><p>Images can also contain multiple 'frames'. When drawing an image, a specific frame may be drawn.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.Image.DefaultFlags":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Image.DefaultFlags\",\n\t\t\t\"link\": \"Image.DefaultFlags\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Global <strong>DefaultFlags</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Global <b>DefaultFlags</b>=0</p>\",\"description\":\"<p>The image flags used by default when an image is loaded or created.</p><br><p>Image flags can be one of:</p><br><p><b>Image</b>.MidHandle - If this flag is used then the image is automatically handled by its centre.</p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.graphics.Image.Frames":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Image.Frames\",\n\t\t\t\"link\": \"Image.Frames\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Frames</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Frames</b>() </p>\",\"description\":\"<p>Returns the number of frames of the current image. The number of frames is set when an image is loaded or grabbed.</p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.graphics.Image.GrabImage":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Image.GrabImage\",\n\t\t\t\"link\": \"Image.GrabImage\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>GrabImage</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>GrabImage</b>:Image( <b>x</b>, <b>y</b>, <b>width</b>, <b>height</b>, <b>count</b>=1, <b>flags</b>=Image.DefaultFlags )</p>\",\"parameters\":\"<p><b>x</b>, <b>y</b>, <b>width</b>, <b>height</b> - coordinates of rectangle to grab.</p><br><p><b>count</b> - number of frames to grab.</p><br><p><b>flags</b> - image creation flags.</p><br><p>Description:</p><br><p><b>GrabImage</b> creates a new image by 'grabbing' a rectangular region of the current image.</p><br><p>Multiple frame images are assumed to be laid out in a horizontal strip, in which case <b>width</b> and <b>height</b> are the dimensions of each frame, and the source image must be wide enough to contain the entire strip.</p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.graphics.Image.HandleX":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Image.HandleX\",\n\t\t\t\"link\": \"Image.HandleX\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>HandleX</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>HandleX</b>#()</p>\",\"description\":\"<p>Returns the x coordinate of the current image's handle.</p>\",\"see also\":\"<p><b>SetHandle</b></p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.graphics.Image.HandleY":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Image.HandleY\",\n\t\t\t\"link\": \"Image.HandleY\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>HandleY</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>HandleY</b>#()</p>\",\"description\":\"<p>Returns the y coordinate of the current image's handle.</p>\",\"see also\":\"<p><b>SetHandle</b></p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.graphics.Image.Height":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Image.Height\",\n\t\t\t\"link\": \"Image.Height\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Height</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Height</b>()</p>\",\"description\":\"<p>Returns the height of the image in pixels. This is not affected by the current matrix, which only applies when rendering the image.</p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.graphics.Image.SetHandle":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Image.SetHandle\",\n\t\t\t\"link\": \"Image.SetHandle\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>SetHandle</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>SetHandle</b>( <b>x</b>#, <b>y</b># )</p><br><p><b>x</b>, <b>y</b> - coordinates that specify the handle location.</p><br><p>Description: </p><br><p>Sets the image offset handle for this image. The handle is a 2D offset subtracted from the x,y coordinates of the image when it is drawn.  </p><br><p>By default, images have a handle of 0,0, meaning the top-left pixel appears at the coordinates used in DrawImage.</p><br><p>By specifying Image.MidHandle when loading or grabbing an image - or by setting Image.Default flags to Image.MidHandle before hand - images will automatically be handled by their centre instead.</p><br><p>The image handle is subtracted before rotation and scale are applied providing a 'local' origin.</p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.graphics.Image.Width":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Image.Width\",\n\t\t\t\"link\": \"Image.Width\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Width</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Width</b>()</p>\",\"description\":\"<p>Returns the width of the image in pixels. This is not affected by the current matrix, which only applies when rendering the image.</p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.graphics.LoadImage":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"LoadImage\",\n\t\t\t\"link\": \"LoadImage\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>LoadImage</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>LoadImage</b>:Image( <b>path</b>$, <b>frames</b>=1, <b>flags</b>=Image.DefaultFlags )</p>\",\"parameters\":\"<p><b>path</b> - the data file path of the image to load, relative to your applications .data folder.</p><br><p><b>frames</b> - the number of frames contained in the image.</p>\",\"description\":\"<p>Loads an image from <b>path</b>.</p><br><p>The frames of a multiple frame image must be laid out in a horizontal strip, in which case the width of the loaded image is the width of image file divided by the number of frames, and the height of the image is the height of the image file.</p><br><p>The image must be a PNG or JPEG image format, and must have the three-letter file extension .png or .jpg (not .jpeg). PNGs with alpha transparency channels are supported.</p><br><p>Like all game data, the image file must be saved in your project's .data folder or one of its sub-folders.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.PopMatrix":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"PopMatrix\",\n\t\t\t\"link\": \"PopMatrix\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>PopMatrix</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>PopMatrix</b>()</p>\",\"description\":\"<p>Pops a matrix from the internal matrix stack and makes it the current matrix.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.PushMatrix":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"PushMatrix\",\n\t\t\t\"link\": \"PushMatrix\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>PushMatrix</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>PushMatrix</b>()</p>\",\"description\":\"<p>Pushes the current matrix onto the internal matrix stack.</p><br><p>The matrix can be restored at a later time using <b>PopMatrix</b>.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.Rotate":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Rotate\",\n\t\t\t\"link\": \"Rotate\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Rotate</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Rotate</b>( <b>angle</b># )</p>\",\"parameters\":\"<p><b>angle</b> - rotation angle in degrees.</p>\",\"description\":\"<p>Multiplies the current matrix by a matrix representing the specified rotation.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.Scale":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Scale\",\n\t\t\t\"link\": \"Scale\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Scale</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Scale</b>( <b>x</b>#, <b>y</b># )</p>\",\"parameters\":\"<p><b>x</b>, <b>y</b> - scale factors.</p>\",\"description\":\"<p>Multiplies the current matrix by a matrix representing the specified scale.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.SetAlpha":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"SetAlpha\",\n\t\t\t\"link\": \"SetAlpha\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>SetAlpha</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>SetAlpha</b>( <b>alpha</b> )</p>\",\"parameters\":\"<p><b>alpha</b> - global alpha value in the range 0 to 1.</p>\",\"description\":\"<p>Sets the current global alpha.</p><br><p>Alpha controls the 'mixing' that occurs when rendering. An alpha value of 1 results in completely opaque rendering, while 0 results in completely transparent rendering.</p><br><p>In the case of images which contain alpha, the alpha used for rendering is the product of each image pixel's alpha and the current global alpha.</p><br><p>Global alpha affects all drawing operations except for <b>Cls</b>.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.SetBlend":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"SetBlend\",\n\t\t\t\"link\": \"SetBlend\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>SetBlend</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>SetBlend</b>( <b>mode</b> )</p>\",\"parameters\":\"<p><b>mode</b> - the blend mode to set.</p>\",\"description\":\"<p>Sets the current blending mode to <b>mode</b>.</p><br><p>The current blending mode affects all drawing commands except for <b>Cls</b>.</p><br><p>The <b>mode</b> parameter can be one of the following:...</p><br><p>0 - Normal alpha blending.</p><br><p>1 - Target dependent 'lighten' blending. The precise effect depends on the target platform, and may be slower than normal alpha blend.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.SetColor":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"SetColor\",\n\t\t\t\"link\": \"SetColor\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>SetColor</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>SetColor</b>( <b>red</b>#, <b>green</b>#, <b>blue</b># )</p>\",\"parameters\":\"<p><b>red</b>, <b>green</b>, <b>blue</b> - color components in the range 0 to 255.</p>\",\"description\":\"<p>Sets the current color.</p><br><p>The current color is used by all drawing operations except <b>Cls</b> and <b>DrawImage</b>.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.SetFont":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"SetFont\",\n\t\t\t\"link\": \"SetFont\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>SetFont</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>SetFont</b>( <b>font</b>:Image, <b>firstChar</b>=32 )</p>\",\"parameters\":\"<p><b>font</b> - an image describing the font. Each image frame represents a single character in the font.</p><br><p><b>firstChar</b> - the character code that frame 0 in the font represents.</p>\",\"description\":\"<p>Sets the font for use with DrawText.</p><br><p><b>font</b> may be Null, in which case an internal 7x11 white-on-black font is used and the <b>firstChar</b> parameter is ignored.</p><br><p>Note: The font functionality in mojo is very limited and intended mainly for debugging purposes.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.SetMatrix":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"SetMatrix\",\n\t\t\t\"link\": \"SetMatrix\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>SetMatrix</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>SetMatrix</b>( <b>matrix</b>#[] )</p><br><p>Function <b>SetMatrix</b>( <b>ix</b>#, <b>iy</b>#, <b>jx</b>#, <b>jy</b>#, <b>tx</b>#, <b>ty</b># )</p>\",\"parameters\":\"<p><b>matrix</b> - a float array containing matrix components.</p><br><p><b>ix</b>, <b>iy</b>, <b>jx</b>, <b>jy</b>, <b>tx</b>, <b>ty</b> - matrix components.</p>\",\"description\":\"<p>Sets the current matrix.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.SetScissor":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"SetScissor\",\n\t\t\t\"link\": \"SetScissor\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>SetScissor</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>SetScissor</b>( <b>x</b>#, <b>y</b>#, <b>width</b>#, <b>height</b># )</p>\",\"parameters\":\"<p><b>x</b>, <b>y</b> - coordinates of the upper left of the scissor rectangle.</p><br><p><b>width</b>, <b>height</b> - width and height of the scissor rectangle.</p>\",\"description\":\"<p>Sets the current scissor rectangle to the rectangle specified by <b>x</b>, <b>y</b>, <b>width</b> and <b>height</b>.</p><br><p>All drawing commands are 'clipped' to the current scissor rectangle. To disable clipping, set the scissor rectangle to 0,0,DeviceWidth,DeviceHeight.</p><br><p>The rectangle coordinates used with <b>SetScissor</b> are device coordinates, and are not affected by the current matrix.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.Transform":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Transform\",\n\t\t\t\"link\": \"Transform\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Transform</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Transform</b>( <b>ix</b>#, <b>iy</b>#, <b>jx</b>#, <b>jy</b>#, <b>tx</b>#, <b>ty</b># )</p>\",\"parameters\":\"<p><b>ix</b>, <b>iy</b>, <b>jx</b>, <b>jy</b>, <b>tx</b>, <b>ty</b> - matrix components.</p>\",\"description\":\"<p>Multiplies the current matrix by the specified matrix.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.graphics.Translate":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.graphics\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Translate\",\n\t\t\t\"link\": \"Translate\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Translate</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Translate</b>( <b>x</b>#, <b>y</b># )</p>\",\"parameters\":\"<p><b>x</b>, <b>y</b> - translation offsets</p>\",\"description\":\"<p>Multiplies the current matrix by a matrix representing the specified translation.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>mojo.input</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The input module allows programs to check for user input from a wide variety of devices such keyboards, mice, joysticks and touchsceens.</p><br><p>The input module uses a 'polling' input model, meaning that your program must continually check (or 'poll') the state of input devices. Polling is usually performed during the <b>OnUpdate</b> phase of your program.</p><br><p>The following constants are for use with <b>KeyDown</b> and <b>KeyHit</b>: <pre>\\nKEY_BACKSPACE\\nKEY_TAB\\nKEY_ENTER\\nKEY_ESCAPE\\nKEY_SPACE\\nKEY_SHIFT\\nKEY_CONTROL\\nKEY_PAGEUP\\nKEY_PAGEDOWN\\nKEY_END\\nKEY_HOME\\nKEY_LEFT\\nKEY_UP\\nKEY_RIGHT\\nKEY_DOWN\\nKEY_INSERT\\nKEY_DELETE\\nKEY_F1\\nKEY_F2\\nKEY_F3\\nKEY_F4\\nKEY_F5\\nKEY_F6\\nKEY_F7\\nKEY_F8\\nKEY_F9\\nKEY_F10\\nKEY_F11\\nKEY_F12\\nKEY_0\\nKEY_1\\nKEY_2\\nKEY_3\\nKEY_4\\nKEY_5\\nKEY_6\\nKEY_7\\nKEY_8\\nKEY_9\\nKEY_A\\nKEY_B\\nKEY_C\\nKEY_D\\nKEY_E\\nKEY_F\\nKEY_G\\nKEY_H\\nKEY_I\\nKEY_J\\nKEY_K\\nKEY_L\\nKEY_M\\nKEY_N\\nKEY_O\\nKEY_P\\nKEY_Q\\nKEY_R\\nKEY_S\\nKEY_T\\nKEY_U\\nKEY_V\\nKEY_W\\nKEY_X\\nKEY_Y\\nKEY_Z\\nKEY_TILDE\\nKEY_MINUS\\nKEY_EQUALS\\nKEY_OPENBRACKET\\nKEY_CLOSEBRACKET\\nKEY_BACKSLASH\\nKEY_SEMICOLON\\nKEY_QUOTES\\nKEY_COMMA\\nKEY_PERIOD\\nKEY_SLASH\\n</pre>\\n</p><br><p>As a convenience, the commands <b>KeyDown</b> and <b>KeyHit</b> can also be used to test non-keyboard devices using these additional constants: <pre>\\nKEY_LMB\\t\\t\\t'Left mouse button\\nKEY_RMB\\t\\t\\t'Right mouse button\\nKEY_MMB\\t\\t\\t'Middle mouse button\\n\\nKEY_JOY0_A\\t\\t'A button on joystick 0\\nKEY_JOY0_B\\t\\t'B button on joystick 0\\nKEY_JOY0_X\\t\\t'X button on joystick 0\\nKEY_JOY0_Y\\t\\t'Y button on joystick 0\\nKEY_JOY0_LEFT\\t'left button on joystick 0\\nKEY_JOY0_UP\\t\\t'up button on joystick 0\\nKEY_JOY0_RIGHT\\t'right button on joystick 0\\nKEY_JOY0_DOWN\\t'down button on joystick 0\\n\\nKEY_TOUCH0\\t\\t'First touch - note: 32 touch codes supported. KEY_TOUCHn=KEY_TOUCH0+n, where n&gt;=0 and n&lt;32\\n</pre>\\n</p><br><p>The following constants are for use with <b>MouseDown</b> and <b>MouseHit</b>: <pre>\\nMOUSE_LEFT\\nMOUSE_RIGHT\\nMOUSE_MIDDLE\\n</pre>\\n</p><br><p>The following constants are for use with <b>JoyDown</b> and <b>JoyHit</b>: <pre>\\nJOY_A\\nJOY_B\\nJOY_X\\nJOY_Y\\nJOY_LB\\nJOY_RB\\nJOY_BACK\\nJOY_START\\nJOY_LEFT\\nJOY_UP\\nJOY_RIGHT\\nJOY_DOWN\\n</pre>\\n</p><br><p>The following constants are for use with <b>GetChar</b>: <pre>\\nCHAR_TAB\\nCHAR_BACKSPACE\\nCHAR_ENTER\\nCHAR_ESCAPE\\nCHAR_PAGEUP\\nCHAR_PAGEDOWN\\nCHAR_END\\nCHAR_HOME\\nCHAR_LEFT\\nCHAR_UP\\nCHAR_RIGHT\\nCHAR_DOWN\\nCHAR_INSERT\\nCHAR_DELETE\\n</pre>\\n</p>\"\n\n\t\t}\n\t]\n}\n",
"mojo.input.contents":"{\"functions\":[{\"name\":\"AccelX\",\"link\":\"AccelX\"},{\"name\":\"AccelY\",\"link\":\"AccelY\"},{\"name\":\"AccelZ\",\"link\":\"AccelZ\"},{\"name\":\"GetChar\",\"link\":\"GetChar\"},{\"name\":\"JoyDown\",\"link\":\"JoyDown\"},{\"name\":\"JoyHit\",\"link\":\"JoyHit\"},{\"name\":\"KeyDown\",\"link\":\"KeyDown\"},{\"name\":\"KeyHit\",\"link\":\"KeyHit\"},{\"name\":\"MouseDown\",\"link\":\"MouseDown\"},{\"name\":\"MouseHit\",\"link\":\"MouseHit\"},{\"name\":\"MouseX\",\"link\":\"MouseX\"},{\"name\":\"MouseY\",\"link\":\"MouseY\"},{\"name\":\"TouchDown\",\"link\":\"TouchDown\"},{\"name\":\"TouchHit\",\"link\":\"TouchHit\"},{\"name\":\"TouchX\",\"link\":\"TouchX\"},{\"name\":\"TouchY\",\"link\":\"TouchY\"}]}",
"mojo.input.AccelX":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"AccelX\",\n\t\t\t\"link\": \"AccelX\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>AccelX</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>AccelX</b>#()</p>\",\"description\":\"<p>Returns the x compononent of the acceleration applied to the device, as measured by the device's accelerometer if present.</p><br><p>The value returned is in the range -1 to 1 inclusive.</p><br><p>If the device has no accelerometer, 0 is returned.</p><br><p>Accelerometer functionality is currently only available on the Android and iOS targets.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.AccelY":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"AccelY\",\n\t\t\t\"link\": \"AccelY\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>AccelY</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>AccelY</b>#()</p>\",\"description\":\"<p>Returns the y compononent of the acceleration applied to the device, as measured by the device's accelerometer if present.</p><br><p>The value returned is in the range -1 to 1 inclusive.</p><br><p>If the device has no accelerometer, 0 is returned.</p><br><p>Accelerometer functionality is currently only available on the Android and iOS targets.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.AccelZ":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"AccelZ\",\n\t\t\t\"link\": \"AccelZ\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>AccelZ</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>AccelZ</b>#()</p>\",\"description\":\"<p>Returns the z compononent of the acceleration applied to the device, as measured by the device's accelerometer if present.</p><br><p>The value returned is in the range -1 to 1 inclusive.</p><br><p>If the device has no accelerometer, 0 is returned.</p><br><p>Accelerometer functionality is currently only available on the Android and iOS targets.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.GetChar":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"GetChar\",\n\t\t\t\"link\": \"GetChar\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>GetChar</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>GetChar</b>()</p>\",\"description\":\"<p>Returns the character code of the next character in the keyboard character queue, or 0 if no more characters are available.</p><br><p>The keyboard queue contains characters codes as opposed to the key codes used by KeyDown and KeyUp.</p><br><p>Character codes differ from key codes in that they are generally printable and may be modified by the shift, control and alt keys. Character codes also 'repeat' at a rate determined by the OS.</p><br><p>The mapping from key codes to character codes is controlled by the underlying OS, but in practice will generally map to ASCII codes.</p><br><p>The input module also provides special character code mappings for a number of unprintable keys: <pre>\\nCHAR_TAB\\nCHAR_BACKSPACE\\nCHAR_ENTER\\nCHAR_ESCAPE\\nCHAR_PAGEUP\\nCHAR_PAGEDOWN\\nCHAR_END\\nCHAR_HOME\\nCHAR_LEFT\\nCHAR_UP\\nCHAR_RIGHT\\nCHAR_DOWN\\nCHAR_INSERT\\nCHAR_DELETE\\n</pre>\\n</p>\",\"example\":\"<p><pre>\\nImport mojo\\n\\nClass MyApp Extends App\\n\\n\\tField text$=\\\"Type something:\\\"\\n\\n\\tMethod OnCreate()\\n\\t\\tSetUpdateRate 30\\n\\tEnd\\n\\t\\n\\tMethod OnUpdate()\\n\\t\\tLocal char=GetChar()\\n\\t\\tIf char&gt;=32\\n\\t\\t\\ttext+=String.FromChar( char )\\n\\t\\tEndif\\n\\tEnd\\n\\t\\n\\tMethod OnRender()\\n\\t\\tCls\\n\\t\\tDrawText text,0,0\\n\\tEnd\\nEnd\\n\\nFunction Main()\\n\\tNew MyApp\\nEnd\\n</pre>\\n</p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.JoyDown":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"JoyDown\",\n\t\t\t\"link\": \"JoyDown\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>JoyDown</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>JoyDown</b>( <b>button</b> )</p>\",\"parameters\":\"<p><b>button</b> - joystick button to test.</p>\",\"description\":\"<p>Return true if the specified joystick button is currently held down.</p><br><p><b>button</b> should be one of the following: <pre>\\nJOY_A\\nJOY_B\\nJOY_X\\nJOY_Y\\nJOY_LB\\nJOY_RB\\nJOY_BACK\\nJOY_START\\nJOY_LEFT\\nJOY_UP\\nJOY_RIGHT\\nJOY_DOWN\\n</pre>\\n</p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.JoyHit":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"JoyHit\",\n\t\t\t\"link\": \"JoyHit\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>JoyHit</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>JoyHit</b>( <b>button</b> )</p>\",\"parameters\":\"<p><b>button</b> - joystick button to test.</p>\",\"description\":\"<p>Return the number of times the specified joystick button has been pressed since the last OnUpdate.</p><br><p><b>button</b> should be one of the following: <pre>\\nJOY_A\\nJOY_B\\nJOY_X\\nJOY_Y\\nJOY_LB\\nJOY_RB\\nJOY_BACK\\nJOY_START\\nJOY_LEFT\\nJOY_UP\\nJOY_RIGHT\\nJOY_DOWN\\n</pre>\\n</p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.KeyDown":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"KeyDown\",\n\t\t\t\"link\": \"KeyDown\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>KeyDown</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>KeyDown</b>( <b>key</b> )</p>\",\"parameters\":\"<p><b>key</b> - keycode of the key to check.</p>\",\"description\":\"<p>Returns true if the specified key is currently held down, otherwise false.</p><br><p>Note that any on/off style 'buttons' on any device can be read using the <b>KeyDown</b> and <b>KeyHit</b> commands. For example, to read the state of the left mouse button you can use <b>KeyDown</b>( KEY_LMB ) in addition to <b>MouseDown</b>( MOUSE_LEFT ).</p>\",\"example\":\"<p><pre>\\nImport mojo\\n\\nClass MyApp Extends App\\n\\n\\tMethod OnCreate()\\n\\t\\tSetUpdateRate 30\\n\\tEnd\\n\\t\\n\\tMethod OnUpdate()\\n\\tEnd\\n\\t\\n\\tMethod OnRender()\\n\\t\\tCls\\n\\t\\tDrawText \\\"Hold down some keys\\\",0,0\\n\\t\\tLocal y=14\\n\\t\\tFor Local i=1 To 255\\n\\t\\t\\tIf KeyDown( i )\\n\\t\\t\\t\\tDrawText \\\"Key \\\"+i+\\\" is down.\\\",0,y\\n\\t\\t\\t\\ty+=14\\n\\t\\t\\tEndif\\n\\t\\tNext\\n\\tEnd\\nEnd\\n\\nFunction Main()\\n\\tNew MyApp\\nEnd\\n</pre>\\n</p>\",\"see also\":\"<p><b>KeyHit</b></p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.KeyHit":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"KeyHit\",\n\t\t\t\"link\": \"KeyHit\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>KeyHit</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>KeyHit</b>( <b>key</b> )</p>\",\"parameters\":\"<p><b>key</b> - keycode of the key to check.</p>\",\"description\":\"<p>Returns the number of times the specified key has been hit since the last OnUpdate.</p><br><p>Note that any on/off style 'buttons' on any device can be read using the <b>KeyDown</b> and <b>KeyHit</b> commands. For example, to read the state of the left mouse button you can use <b>KeyDown</b>( KEY_LMB ) in addition to <b>MouseDown</b>( MOUSE_LEFT ).</p>\",\"example\":\"<p><pre>\\nImport mojo\\n\\nClass MyApp Extends App\\n\\n\\tField lineY\\n\\t\\t\\t\\n\\tMethod OnCreate()\\n\\t\\tlineY=DeviceHeight()/2\\n\\t\\tSetUpdateRate 30\\n\\tEnd\\n\\t\\n\\tMethod OnUpdate()\\n\\n\\t\\tLocal hit=KeyHit( KEY_LMB )\\t'Uses KeyHit to check the left mouse button.  You could also use MouseHit( MOUSE_LEFT )\\n\\t\\t\\n\\t\\tIf hit And MouseY()&lt;lineY\\n\\t\\t\\tPrint \\\"You clicked above the line.\\\"\\n\\t\\tElse If hit And MouseY()&gt;=lineY\\n\\t\\t\\tPrint \\\"You clicked on or below the line.\\\"\\n\\t\\tEnd\\n\\tEnd\\n\\t\\n\\tMethod OnRender()\\n\\t\\tCls\\n\\t\\tDrawLine 0,lineY,DeviceWidth(),lineY\\n\\tEnd\\nEnd\\n\\nFunction Main()\\n\\tNew MyApp\\nEnd\\n</pre>\\n</p>\",\"see also\":\"<p><b>KeyDown</b></p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.MouseDown":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"MouseDown\",\n\t\t\t\"link\": \"MouseDown\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>MouseDown</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>MouseDown</b>( <b>button</b>=MOUSE_LEFT )</p>\",\"parameters\":\"<p><b>button</b> - mouse button to check: <b>MOUSE_LEFT</b>, <b>MOUSE_RIGHT</b> or <b>MOUSE_MIDDLE</b></p>\",\"description\":\"<p>Returns true if the specified mouse button is currently held down, otherwise false.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.MouseHit":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"MouseHit\",\n\t\t\t\"link\": \"MouseHit\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>MouseHit</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>MouseHit</b>( <b>button</b>=MOUSE_LEFT )</p>\",\"parameters\":\"<p><b>button</b> - mouse button to check: <b>MOUSE_LEFT</b>, <b>MOUSE_RIGHT</b> or <b>MOUSE_MIDDLE</b></p>\",\"description\":\"<p>Returns the number of times the specified mouse button has been pressed since the last OnUpdate.</p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.MouseX":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"MouseX\",\n\t\t\t\"link\": \"MouseX\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>MouseX</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>MouseX</b>#()</p>\",\"description\":\"<p>Returns the x coordinate of the mouse pointer.</p><br><p>On devices with a touch screen but no mouse, <b>MouseX</b> will instead return <b>TouchX</b>( 0 ).</p>\",\"example\":\"<p><pre>\\nImport mojo\\n\\nClass MyApp Extends App\\n\\n\\tMethod OnCreate()\\n\\t\\tSetUpdateRate 30\\n\\tEnd\\n\\t\\n\\tMethod OnUpdate()\\n\\tEnd\\n\\t\\n\\tMethod OnRender()\\n\\t\\tCls\\n\\t\\tDrawText \\\"MouseX=\\\"+MouseX+\\\", MouseY=\\\"+MouseY,0,0\\n\\t\\tDrawCircle MouseX,MouseY,10\\n\\tEnd\\nEnd\\n\\nFunction Main()\\n\\tNew MyApp\\nEnd\\n</pre>\\n</p>\",\"see also\":\"<p><b>MouseY</b></p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.MouseY":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"MouseY\",\n\t\t\t\"link\": \"MouseY\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>MouseY</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>MouseY</b>#()</p>\",\"description\":\"<p>Returns the y coordinate of the mouse pointer.</p><br><p>On devices with a touch screen but no mouse, <b>MouseY</b> will instead return <b>TouchY</b>( 0 ).</p>\",\"see also\":\"<p><b>MouseX</b></p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.TouchDown":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"TouchDown\",\n\t\t\t\"link\": \"TouchDown\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>TouchDown</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>TouchDown</b>( <b>index</b>=0 )</p>\",\"parameters\":\"<p><b>index</b> - finger index in the range 0 to 31.</p>\",\"description\":\"<p>Returns true if the finger specified by <b>index</b> is currently touching the touchscreen, otherwise false.</p><br><p>Note that <b>index</b> refers to the order touches have been made. The first finger to touch the touchscreen will be assigned index 0. If another finger then also touches the touchscreen, it will be assigned index 1 and so on.</p><br><p>If a finger is touching, you can get its x and y coordinates using the <b>TouchX</b> and <b>TouchY</b> commands.</p><br><p>On devices with a mouse but no touch screen, <b>TouchDown</b>( 0 ) will instead return <b>MouseDown</b>( MOUSE_LEFT ).</p>\",\"example\":\"<p><pre>\\nImport mojo\\n\\nClass MyApp Extends App\\n\\n\\tField touching\\n\\t\\n\\tMethod OnCreate()\\n\\t\\tSetUpdateRate 30\\n\\tEnd\\n\\t\\n\\tMethod OnUpdate()\\n\\t\\ttouching=0\\n\\t\\tFor Local i=0 Until 32\\n\\t\\t\\tIf TouchDown( i ) touching+=1\\n\\t\\tNext\\n\\tEnd\\n\\t\\n\\tMethod OnRender()\\n\\t\\tCls\\n\\t\\tDrawText touching,0,0\\n\\tEnd\\nEnd\\n\\nFunction Main()\\n\\tNew MyApp\\nEnd\\n</pre>\\n</p>\",\"see also\":\"<p><b>TouchX</b>, <b>TouchY</b>, <b>TouchHit</b></p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.TouchHit":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"TouchHit\",\n\t\t\t\"link\": \"TouchHit\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>TouchHit</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>TouchHit</b>( <b>index</b>=0 )</p>\",\"parameters\":\"<p><b>index</b> - finger index in the range 0 to 31.</p>\",\"description\":\"<p>Returns the number of times the specified finger has made contact with the touchscreen since the last OnUpdate.</p><br><p>Note that <b>index</b> refers to the order touches have been made. The first finger to touch the touchscreen will be assigned index 0. If another finger then also touches the touchscreen, it will be assigned index 1 and so on.</p><br><p>If a finger is touching, you can get its x and y coordinates using the <b>TouchX</b> and <b>TouchY</b> commands.</p><br><p>On devices with a mouse but no touch screen, <b>TouchHit</b>( 0 ) will instead return <b>MouseHit</b>( MOUSE_LEFT ).</p>\",\"see also\":\"<p><b>TouchX</b>, <b>TouchY</b>, <b>TouchHit</b></p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.TouchX":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"TouchX\",\n\t\t\t\"link\": \"TouchX\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>TouchX</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>TouchX</b>#( <b>index</b>=0 )</p>\",\"description\":\"<p>Returns the x coordinate of the finger on a touch screen device.</p><br><p>Note that <b>index</b> refers to the order touches have been made. The first finger to touch the touchscreen will be assigned index 0. If another finger then also touches the touchscreen, it will be assigned index 1 and so on.</p><br><p>On devices with a mouse but no touch screen, <b>TouchX</b>( 0 ) will instead return <b>MouseX</b>.</p>\",\"see also\":\"<p><b>TouchY</b>, <b>TouchDown</b>, <b>TouchHit</b></p>\"\n\t\t}\n\t]\n}\n",
"mojo.input.TouchY":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"mojo.input\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"TouchY\",\n\t\t\t\"link\": \"TouchY\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>TouchY</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>TouchY</b>#( <b>index</b>=0 )</p>\",\"description\":\"<p>Returns the y coordinate of the finger on a touch screen device.</p><br><p>Note that <b>index</b> refers to the order touches have been made. The first finger to touch the touchscreen will be assigned index 0. If another finger then also touches the touchscreen, it will be assigned index 1 and so on.</p><br><p>On devices with a mouse but no touch screen, <b>TouchY</b>( 0 ) will instead return <b>MouseY</b>.</p>\",\"see also\":\"<p><b>TouchX</b>, <b>TouchDown</b>, <b>TouchHit</b></p>\"\n\t\t}\n\t]\n}\n",
"monkey.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>monkey</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\"\n\n\t\t}\n\t]\n}\n",
"monkey.contents":"{}",
"monkey.lang.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>monkey.lang</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The lang module provides support for various 'built in' feature and types in monkey.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.contents":"{\"functions\":[{\"name\":\"Error\",\"link\":\"Error\"},{\"name\":\"Print\",\"link\":\"Print\"}],\"types\":[{\"name\":\"Array\",\"link\":\"Array\"},{\"name\":\"Array.Length\",\"link\":\"Array.Length\"},{\"name\":\"Array.Resize\",\"link\":\"Array.Resize\"},{\"name\":\"Float\",\"link\":\"Float\"},{\"name\":\"Int\",\"link\":\"Int\"},{\"name\":\"String\",\"link\":\"String\"},{\"name\":\"String.Contains\",\"link\":\"String.Contains\"},{\"name\":\"String.EndsWith\",\"link\":\"String.EndsWith\"},{\"name\":\"String.Find\",\"link\":\"String.Find\"},{\"name\":\"String.FindLast\",\"link\":\"String.FindLast\"},{\"name\":\"String.FromChar\",\"link\":\"String.FromChar\"},{\"name\":\"String.Join\",\"link\":\"String.Join\"},{\"name\":\"String.Length\",\"link\":\"String.Length\"},{\"name\":\"String.Replace\",\"link\":\"String.Replace\"},{\"name\":\"String.Split\",\"link\":\"String.Split\"},{\"name\":\"String.StartsWith\",\"link\":\"String.StartsWith\"},{\"name\":\"String.ToLower\",\"link\":\"String.ToLower\"},{\"name\":\"String.ToUpper\",\"link\":\"String.ToUpper\"},{\"name\":\"String.Trim\",\"link\":\"String.Trim\"}],\"classes\":[{\"name\":\"Object\",\"link\":\"Object\"}]}",
"monkey.lang.Array":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Array\",\n\t\t\t\"link\": \"Array\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Type <strong>Array</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The <b>Array</b> type is a fundamental monkey type used to represent array values.</p><br><p>Please see the <b>Types</b> section of the monkey language reference for more information on the array type.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.lang.Array.Length":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Array.Length\",\n\t\t\t\"link\": \"Array.Length\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Length</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Length</b>() Property</p>\",\"description\":\"<p>Returns the number of elements contained in the array. </p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.Array.Resize":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Array.Resize\",\n\t\t\t\"link\": \"Array.Resize\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Resize</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Resize</b>:Array( <b>newLength</b> )</p>\",\"parameters\":\"<p><b>newLength</b> - new array length</p>\",\"description\":\"<p>Returns a copy of this array, resized to <b>newLength</b>.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.Error":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Error\",\n\t\t\t\"link\": \"Error\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Error</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Error</b>( <b>str</b>$ )</p>\",\"parameters\":\"<p><b>str</b> - details of the error.</p>\",\"description\":\"<p>Generates a runtime error.</p><br><p>This will stop the program and attempt to notify the user with <b>str</b> as an error message.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.lang.Float":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Float\",\n\t\t\t\"link\": \"Float\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Type <strong>Float</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The <b>Float</b> type is a fundamental monkey type used to represent floating point values.</p><br><p>Please see the <b>Types</b> section of the monkey language reference for more information on the float type.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.lang.Int":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Int\",\n\t\t\t\"link\": \"Int\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Type <strong>Int</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The <b>Int</b> type is a fundamental monkey type used to represent signed integer values.</p><br><p>Please see the <b>Types</b> section of the monkey language reference for more information on the int type.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.lang.Object":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Object\",\n\t\t\t\"link\": \"Object\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>Object</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The Object class is the common base class for all monkey objects.</p><br><p>The object class currently has no members.</p><br><p>Please see the <b>Classes and objects</b> section of the monkey language reference for more information about class and objects.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.lang.Print":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Print\",\n\t\t\t\"link\": \"Print\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Print</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Print</b>( <b>str</b>$ )</p>\",\"parameters\":\"<p><b>str</b> - string to print.</p>\",\"description\":\"<p>Prints <b>str</b> to an appropriate output 'device'.</p><br><p>Output devices differ from target to target. Currently, <b>Print</b> uses the following outut devices:</p><br><p><b>GLFW</b>, <b>iOS</b>, <b>XNA</b> - prints to C runtime 'stdout'.</p><br><p><b>HTML5</b> - prints to a HTML textarea element with id 'GameConsole' if present, and to window.console if defined.</p><br><p><b>Flash</b> - prints to special overlay.</p><br><p><b>Android</b> - print not currently supported.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.lang.String":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String\",\n\t\t\t\"link\": \"String\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Type <strong>String</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The <b>String</b> type is a fundamental monkey type used to represent sequences of characters.</p><br><p>Please see the <b>Types</b> section of the monkey language reference for more information on the string type.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.lang.String.Contains":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.Contains\",\n\t\t\t\"link\": \"String.Contains\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Contains</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Contains</b>?( <b>subString</b>$ )</p>\",\"parameters\":\"<p><b>subString</b> - string value.</p>\",\"description\":\"<p>Returns <b>True</b> if this string contains any occurances of <b>subString</b>, else <b>False</b>.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.String.EndsWith":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.EndsWith\",\n\t\t\t\"link\": \"String.EndsWith\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>EndsWith</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>EndsWith</b>?( <b>subString</b>$ )</p>\",\"parameters\":\"<p><b>subString</b> - a string value.</p>\",\"description\":\"<p>Returns <b>True</b> if this string ends with with <b>subString</b>, else <b>False</b>.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.String.Find":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.Find\",\n\t\t\t\"link\": \"String.Find\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Find</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Find</b>( <b>subString</b>$, <b>start</b>=0 )</p>\",\"parameters\":\"<p><b>subString</b> - substring to find.</p><br><p><b>start</b> - start index for search.</p>\",\"description\":\"<p>Searches this string for <b>subString</b> starting at index <b>start</b>.</p><br><p>Returns the 0-based index of <b>subString</b> if found, or -1 if not found.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.String.FindLast":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.FindLast\",\n\t\t\t\"link\": \"String.FindLast\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>FindLast</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>FindLast</b>( <b>subString</b>$ )</p><br><p>Method <b>FindLast</b>( <b>subString</b>$, <b>start</b> )</p>\",\"parameters\":\"<p><b>subString</b> - substring to find.</p><br><p><b>start</b> - start index for search.</p>\",\"description\":\"<p>Returns the 0-based index of <b>subString</b> if found, or -1 if not found.</p><br><p>The first version searches this string backwards for <b>subString</b>.</p><br><p>The second version searches this string backwards for <b>subString</b> starting at index <b>start</b>.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.String.FromChar":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.FromChar\",\n\t\t\t\"link\": \"String.FromChar\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>FromChar</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>FromChar</b>$( <b>charCode</b> )</p>\",\"parameters\":\"<p><b>charCode</b> - character to create string with.</p>\",\"description\":\"<p>Creates and returns a string of length 1 containing the character code specified by <b>charCode</b>.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.String.Join":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.Join\",\n\t\t\t\"link\": \"String.Join\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Join</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Join</b>$( <b>pieces</b>$[] )</p>\",\"parameters\":\"<p><b>pieces</b> - an array of strings to join.</p>\",\"description\":\"<p>Concatenates the elements of <b>pieces</b> using this string as a separator and returns the result.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.String.Length":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.Length\",\n\t\t\t\"link\": \"String.Length\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Length</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Length</b>() Property</p>\",\"description\":\"<p>Returns the number of characters contained in the string.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.String.Replace":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.Replace\",\n\t\t\t\"link\": \"String.Replace\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Replace</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Replace</b>$( <b>findString</b>$, <b>replaceString</b>$ )</p>\",\"parameters\":\"<p><b>findString</b>, <b>replaceString</b> - string values.</p>\",\"description\":\"<p>Replaces all occurances of <b>findString</b> with <b>replaceString</b> and returns the result.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.String.Split":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.Split\",\n\t\t\t\"link\": \"String.Split\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Split</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Split</b>$[]( <b>separator</b>$ )</p>\",\"parameters\":\"<p><b>separator</b> - a string value.</p>\",\"description\":\"<p>Splits this string in an array of substrings, using <b>separator</b> to determine where to split.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.String.StartsWith":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.StartsWith\",\n\t\t\t\"link\": \"String.StartsWith\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>StartsWith</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>StartsWith</b>?( <b>subString</b>$ )</p>\",\"parameters\":\"<p><b>subString</b> - a string value.</p>\",\"description\":\"<p>Returns <b>True</b> if this string starts with <b>subString</b>, else <b>False</b>.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.String.ToLower":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.ToLower\",\n\t\t\t\"link\": \"String.ToLower\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>ToLower</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>ToLower</b>$()</p>\",\"description\":\"<p>Converts this string to lowercase and returns the result.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.String.ToUpper":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.ToUpper\",\n\t\t\t\"link\": \"String.ToUpper\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>ToUpper</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>ToUpper</b>$()</p>\",\"description\":\"<p>Converts this string to uppercase and returns the result.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.lang.String.Trim":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.lang\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"String.Trim\",\n\t\t\t\"link\": \"String.Trim\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Trim</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Trim</b>$()</p>\",\"description\":\"<p>Removes any leading and trailing whitespace from this string and returns the result.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>monkey.list</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The list module provdes support for linked lists with the <b>List</b> class.</p><br><p>A linked list is a container style data structure that provides efficient support for the addition, removal and sequential traversal of objects.</p><br><p>A linked list works by connecting elements together with 'next' and 'previous' references, making it very efficient to get from one element to the next, but not so efficient for accessing arbitrary elements.</p><br><p>This connection between elements is achieved using separate <b>Node</b> objects (there is one per element) which contain references to the next and previous nodes in the list, as well as the actual object managed by the node.</p><br><p>The list module also provides the convenience classes <b>IntList</b>, <b>FloatList</b> and <b>StringList</b>, which allow you to create lists of primitive types.</p><br><p>Here are some examples of lists in action:</p><pre>\\nFunction Main()\\n\\n\\t'create a new list\\n\\tLocal myList:=New StringList\\n\\t\\n\\t'add a bunch of stuff\\n\\tmyList.AddLast \\\"Hello\\\"\\n\\tmyList.AddLast \\\"BAM!\\\"\\n\\tmyList.AddLast \\\"there\\\"\\n\\tmyList.AddLast \\\"BAM!\\\"\\n\\tmyList.AddLast \\\"this\\\"\\n\\tmyList.AddLast \\\"BAM!\\\"\\n\\tmyList.AddLast \\\"is\\\"\\n\\tmyList.AddLast \\\"BAM!\\\"\\n\\tmyList.AddLast \\\"a\\\"\\n\\tmyList.AddLast \\\"BAM!\\\"\\n\\tmyList.AddLast \\\"List\\\"\\n\\t\\n\\t'removes all occurances of a value\\n\\tmyList.RemoveEach \\\"BAM!\\\"\\n\\n\\t'iterate through a list with an EachIn loop\\n\\tFor Local item:=EachIn myList\\n\\t\\tPrint item\\n\\tNext\\n\\t\\n\\tPrint \\\"\\\"\\n\\t\\n\\t'create a new 'stack'\\n\\tLocal myStack:=New StringList\\n\\t\\n\\t'push a bunch of stuff\\n\\tmyStack.AddLast \\\"stacks\\\"\\n\\tmyStack.AddLast \\\"as\\\"\\n\\tmyStack.AddLast \\\"used\\\"\\n\\tmyStack.AddLast \\\"be\\\"\\n\\tmyStack.AddLast \\\"also\\\"\\n\\tmyStack.AddLast \\\"can\\\"\\n\\tmyStack.AddLast \\\"Lists\\\"\\n\\t\\n\\t'pop and print the stack\\n\\tWhile Not myStack.IsEmpty()\\n\\t\\tPrint myStack.RemoveLast()\\n\\tWend\\n\\t\\nEnd\\n</pre>\\n</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.contents":"{\"classes\":[{\"name\":\"FloatList\",\"link\":\"FloatList\"},{\"name\":\"FloatList.ToArray\",\"link\":\"FloatList.ToArray\"},{\"name\":\"IntList\",\"link\":\"IntList\"},{\"name\":\"IntList.ToArray\",\"link\":\"IntList.ToArray\"},{\"name\":\"List\",\"link\":\"List\"},{\"name\":\"List.AddFirst\",\"link\":\"List.AddFirst\"},{\"name\":\"List.AddLast\",\"link\":\"List.AddLast\"},{\"name\":\"List.Clear\",\"link\":\"List.Clear\"},{\"name\":\"List.Count\",\"link\":\"List.Count\"},{\"name\":\"List.First\",\"link\":\"List.First\"},{\"name\":\"List.IsEmpty\",\"link\":\"List.IsEmpty\"},{\"name\":\"List.Last\",\"link\":\"List.Last\"},{\"name\":\"List.ObjectEnumerator\",\"link\":\"List.ObjectEnumerator\"},{\"name\":\"List.RemoveEach\",\"link\":\"List.RemoveEach\"},{\"name\":\"List.RemoveFirst\",\"link\":\"List.RemoveFirst\"},{\"name\":\"List.RemoveLast\",\"link\":\"List.RemoveLast\"},{\"name\":\"Node\",\"link\":\"Node\"},{\"name\":\"Node.Remove\",\"link\":\"Node.Remove\"},{\"name\":\"Node.Value\",\"link\":\"Node.Value\"},{\"name\":\"StringList\",\"link\":\"StringList\"},{\"name\":\"StringList.ToArray\",\"link\":\"StringList.ToArray\"}]}",
"monkey.list.FloatList":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"FloatList\",\n\t\t\t\"link\": \"FloatList\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>FloatList</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>FloatList</b> Extends List&lt;FloatObject&gt;</p>\",\"description\":\"<p><b>FloatList</b> is a convenience class for handling lists of floating point values.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.list.FloatList.ToArray":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"FloatList.ToArray\",\n\t\t\t\"link\": \"FloatList.ToArray\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>ToArray</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>ToArray</b>:Float[]()</p>\",\"description\":\"<p>Converts the list to an array of floats.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.IntList":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"IntList\",\n\t\t\t\"link\": \"IntList\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>IntList</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>IntList</b> Extends List&lt;IntObject&gt;</p>\",\"description\":\"<p><b>IntList</b> is a convenience class for handling lists of integer values.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.list.IntList.ToArray":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"IntList.ToArray\",\n\t\t\t\"link\": \"IntList.ToArray\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>ToArray</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>ToArray</b>:Int[]()</p>\",\"description\":\"<p>Converts the list to an array of ints.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.List":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"List\",\n\t\t\t\"link\": \"List\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>List</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>List</b>&lt; <b>Type</b> &gt;</p>\",\"description\":\"<p>The <b>List</b> class manages the individual nodes and data that make up a linked list.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.list.List.AddFirst":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"List.AddFirst\",\n\t\t\t\"link\": \"List.AddFirst\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>AddFirst</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>AddFirst</b>:Node&lt;Type&gt;( <b>value</b>:Type )</p>\",\"description\":\"<p>Adds a value at the start of the list.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.List.AddLast":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"List.AddLast\",\n\t\t\t\"link\": \"List.AddLast\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>AddLast</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>AddLast</b>:Node&lt;Type&gt;( <b>value</b>:Type )</p>\",\"description\":\"<p>Adds a value at the end of the list.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.List.Clear":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"List.Clear\",\n\t\t\t\"link\": \"List.Clear\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Clear</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Clear</b>()</p>\",\"description\":\"<p>Removes all the elements from the list.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.List.Count":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"List.Count\",\n\t\t\t\"link\": \"List.Count\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Count</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Count</b>()</p>\",\"description\":\"<p>Returns the number of elements in the list.</p><br><p>Note that this method takes time proportional to the number of elements in the list.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.List.First":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"List.First\",\n\t\t\t\"link\": \"List.First\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>First</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>First</b>:Type()</p>\",\"description\":\"<p>Returns the first element in the list.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.List.IsEmpty":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"List.IsEmpty\",\n\t\t\t\"link\": \"List.IsEmpty\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>IsEmpty</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>IsEmpty</b>?()</p>\",\"description\":\"<p>Return <b>True</b> if the list is empty, <b>False</b> if not empty.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.List.Last":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"List.Last\",\n\t\t\t\"link\": \"List.Last\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Last</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Last</b>:Type()</p>\",\"description\":\"<p>Returns the last element in the list.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.List.ObjectEnumerator":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"List.ObjectEnumerator\",\n\t\t\t\"link\": \"List.ObjectEnumerator\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>ObjectEnumerator</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>ObjectEnumerator</b>:Enumerator&lt;Type&gt;()</p>\",\"description\":\"<p>Returns an object enumerator for use with For Eachin loops.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.List.RemoveEach":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"List.RemoveEach\",\n\t\t\t\"link\": \"List.RemoveEach\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>RemoveEach</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>RemoveEach</b>( <b>value</b>:Type )</p>\",\"description\":\"<p>Finds and removes all elements in the list equal to <b>value</b>.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.List.RemoveFirst":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"List.RemoveFirst\",\n\t\t\t\"link\": \"List.RemoveFirst\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>RemoveFirst</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>RemoveFirst</b>:Type()</p>\",\"description\":\"<p>Removes the first value in the list and returns it.</p><br><p>Behaviour is undefined if the list is empty.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.List.RemoveLast":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"List.RemoveLast\",\n\t\t\t\"link\": \"List.RemoveLast\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>RemoveLast</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>RemoveLast</b>:Type()</p>\",\"description\":\"<p>Removes the last value in the list and returns it.</p><br><p>Behaviour is undefined if the list is empty.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.Node":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Node\",\n\t\t\t\"link\": \"Node\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>Node</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>Node</b>&lt; <b>T</b> &gt;</p>\"\n\t\t}\n\t]\n}\n",
"monkey.list.Node.Remove":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Node.Remove\",\n\t\t\t\"link\": \"Node.Remove\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Remove</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Remove</b>()</p>\",\"description\":\"<p>Removes this node from its list.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.Node.Value":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Node.Value\",\n\t\t\t\"link\": \"Node.Value\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Value</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Value</b>:Type()</p>\",\"description\":\"<p>Returns the value stored in this node.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.list.StringList":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"StringList\",\n\t\t\t\"link\": \"StringList\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>StringList</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>StringList</b> Extends List&lt;StringObject&gt;</p>\",\"description\":\"<p><b>StringList</b> is a convenience class for handling lists of string values.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.list.StringList.ToArray":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.list\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"StringList.ToArray\",\n\t\t\t\"link\": \"StringList.ToArray\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>ToArray</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>ToArray</b>:String[]()</p>\",\"description\":\"<p>Converts the list to an array of strings.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>monkey.map</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The map module provides support for the <i>map</i> data structure.</p><br><p>A map is a container style object that provides a mechanism for associating <i>key</i> objects with <i>value</i> objects. This is done using <b>Node</b> objects that contains a reference to both a key and a value, along with information about the node's location within the map.</p><br><p>Each key in a map occurs exactly once - setting a key to a certain value overwrites any previous value that may have been asspociated with that key. </p><br><p>Maps are very efficient, and can handle inserting, removing and finding keys in 'O(log2)' time. That is, the time needed to insert, remove or find a key is proportional to log2 of the number of items in the map.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.contents":"{\"classes\":[{\"name\":\"FloatMap\",\"link\":\"FloatMap\"},{\"name\":\"IntMap\",\"link\":\"IntMap\"},{\"name\":\"Map\",\"link\":\"Map\"},{\"name\":\"Map.Clear\",\"link\":\"Map.Clear\"},{\"name\":\"Map.Contains\",\"link\":\"Map.Contains\"},{\"name\":\"Map.Get\",\"link\":\"Map.Get\"},{\"name\":\"Map.IsEmpty\",\"link\":\"Map.IsEmpty\"},{\"name\":\"Map.Keys\",\"link\":\"Map.Keys\"},{\"name\":\"Map.ObjectEnumerator\",\"link\":\"Map.ObjectEnumerator\"},{\"name\":\"Map.Remove\",\"link\":\"Map.Remove\"},{\"name\":\"Map.Set\",\"link\":\"Map.Set\"},{\"name\":\"Map.Values\",\"link\":\"Map.Values\"},{\"name\":\"Node\",\"link\":\"Node\"},{\"name\":\"Node.Key\",\"link\":\"Node.Key\"},{\"name\":\"Node.Value\",\"link\":\"Node.Value\"},{\"name\":\"StringMap\",\"link\":\"StringMap\"}]}",
"monkey.map.FloatMap":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"FloatMap\",\n\t\t\t\"link\": \"FloatMap\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>FloatMap</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>FloatMap</b>&lt; <b>Type</b> &gt; Extends Map&lt;FloatObject,Type&gt;</p>\"\n\t\t}\n\t]\n}\n",
"monkey.map.IntMap":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"IntMap\",\n\t\t\t\"link\": \"IntMap\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>IntMap</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>IntMap</b>&lt; <b>Type</b> &gt; Extends Map&lt;IntObject,Type&gt;</p>\",\"description\":\"\"\n\t\t}\n\t]\n}\n",
"monkey.map.Map":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Map\",\n\t\t\t\"link\": \"Map\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>Map</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>Map</b>&lt; <b>KeyType</b>, <b>ValueType</b> &gt;</p>\",\"description\":\"<p>The abstract <b>Map</b> class.</p><br><p>Extending classes must implement the <b>Compare</b> method.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.map.Map.Clear":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Map.Clear\",\n\t\t\t\"link\": \"Map.Clear\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Clear</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Clear</b>()</p>\",\"description\":\"<p>Removes all elements from the map.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.Map.Contains":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Map.Contains\",\n\t\t\t\"link\": \"Map.Contains\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Contains</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Contains</b>?( <b>key</b>:KeyType )</p>\",\"parameters\":\"<p><b>key</b> - value to check</p>\",\"description\":\"<p>Return true if the specified <b>key</b> is contained in the map.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.Map.Get":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Map.Get\",\n\t\t\t\"link\": \"Map.Get\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Get</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Get</b>:ValueType( <b>key</b>:KeyType )</p>\",\"parameters\":\"<p><b>key</b> - key to find value for</p>\",\"description\":\"<p>Returns the value contained in the map associated with the specified key.</p><br><p>If the key is not contained in the map, <b>Null</b> is returned.</p>\",\"see also\":\"<p><b>Set</b></p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.Map.IsEmpty":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Map.IsEmpty\",\n\t\t\t\"link\": \"Map.IsEmpty\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>IsEmpty</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>IsEmpty</b>?()</p>\",\"description\":\"<p>Returns true if the map is empty, ie: contains no keys.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.Map.Keys":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Map.Keys\",\n\t\t\t\"link\": \"Map.Keys\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Keys</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Keys</b>:Object()</p>\",\"description\":\"<p>Returns an enumerator object that can be used to enumerate all keys in the map.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.Map.ObjectEnumerator":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Map.ObjectEnumerator\",\n\t\t\t\"link\": \"Map.ObjectEnumerator\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>ObjectEnumerator</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>ObjectEnumerator</b>:Object()</p>\",\"desciption\":\"<p>Returns an enumerator object that can be used to enumerate all nodes in the map with a <b>For</b> <b>EachIn</b> loop.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.Map.Remove":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Map.Remove\",\n\t\t\t\"link\": \"Map.Remove\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Remove</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Remove</b>( <b>key</b>:KeyType )</p>\",\"parameters\":\"<p><b>key</b> - key to remove</p>\",\"description\":\"<p>Removes <b>key</b> from the map.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.Map.Set":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Map.Set\",\n\t\t\t\"link\": \"Map.Set\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Set</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Set</b>( <b>key</b>:KeyType, <b>value</b>:ValueType )</p>\",\"parameters\":\"<p><b>key</b> - key to set</p><br><p><b>value</b> - value to associate with key.</p>\",\"description\":\"<p>Inserts <b>key</b> into the map and associates <b>value</b> with it.</p><br><p>If the map already contained <b>key</b>, its value is overwritten.</p>\",\"see also\":\"<p><b>Get</b></p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.Map.Values":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Map.Values\",\n\t\t\t\"link\": \"Map.Values\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Values</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Values</b>:Object()</p><br><p>Returns an enumerator object that can be used to enumerate all values in the map.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.Node":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Node\",\n\t\t\t\"link\": \"Node\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>Node</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>Node</b>&lt; <b>KeyType</b>, <b>ValueType</b> &gt;</p>\",\"description\":\"<p>Node objects are responsible for mainting the association between keys and values.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.map.Node.Key":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Node.Key\",\n\t\t\t\"link\": \"Node.Key\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Key</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Key</b>:KeyType()</p>\",\"description\":\"<p>Returns the key contained in the node. </p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.Node.Value":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Node.Value\",\n\t\t\t\"link\": \"Node.Value\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Value</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Value</b>:ValueType()</p>\",\"description\":\"<p>Returns the value contained in the node.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.map.StringMap":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.map\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"StringMap\",\n\t\t\t\"link\": \"StringMap\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>StringMap</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>StringMap</b>&lt; <b>Type</b> &gt; Extends Map&lt;StringObject,Type&gt;</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>monkey.math</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The math module contains function and constants useful for performing math.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.math.contents":"{\"constants\":[{\"name\":\"HALFPI\",\"link\":\"HALFPI\"},{\"name\":\"PI\",\"link\":\"PI\"},{\"name\":\"TWOPI\",\"link\":\"TWOPI\"}],\"functions\":[{\"name\":\"ACos\",\"link\":\"ACos\"},{\"name\":\"ASin\",\"link\":\"ASin\"},{\"name\":\"ATan\",\"link\":\"ATan\"},{\"name\":\"ATan2\",\"link\":\"ATan2\"},{\"name\":\"Abs\",\"link\":\"Abs\"},{\"name\":\"Ceil\",\"link\":\"Ceil\"},{\"name\":\"Clamp\",\"link\":\"Clamp\"},{\"name\":\"Cos\",\"link\":\"Cos\"},{\"name\":\"Floor\",\"link\":\"Floor\"},{\"name\":\"Log\",\"link\":\"Log\"},{\"name\":\"Max\",\"link\":\"Max\"},{\"name\":\"Min\",\"link\":\"Min\"},{\"name\":\"Pow\",\"link\":\"Pow\"},{\"name\":\"Sgn\",\"link\":\"Sgn\"},{\"name\":\"Sin\",\"link\":\"Sin\"},{\"name\":\"Sqrt\",\"link\":\"Sqrt\"},{\"name\":\"Tan\",\"link\":\"Tan\"}]}",
"monkey.math.ACos":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"ACos\",\n\t\t\t\"link\": \"ACos\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>ACos</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>ACos</b>#( <b>x</b># )</p>\",\"parameters\":\"<p><b>x</b> - floating point value in the range -1 to 1 (inclusive).</p>\",\"description\":\"<p>Returns the arc cosine of <b>x</b>, expressed in degrees.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.ASin":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"ASin\",\n\t\t\t\"link\": \"ASin\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>ASin</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>ASin</b>#( <b>x</b># )</p>\",\"parameters\":\"<p><b>x</b> - floating point value in the range -1 to 1 (inclusive).</p>\",\"description\":\"<p>Returns the arc sine of <b>x</b>, expressed in degrees.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.ATan":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"ATan\",\n\t\t\t\"link\": \"ATan\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>ATan</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>ATan</b>#( <b>x</b># )</p>\",\"parameters\":\"<p><b>x</b> - floatint point value.</p>\",\"description\":\"<p>Returns the arc tangent of <b>x</b>, expressed in degrees.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.ATan2":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"ATan2\",\n\t\t\t\"link\": \"ATan2\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>ATan2</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>ATan2</b>#( <b>x</b>#, <b>y</b># )</p>\",\"parameters\":\"<p><b>x</b>, <b>y</b> - float point values.</p>\",\"description\":\"<p>Returns the arc tangent of <b>x</b> / <b>y</b>, expressed in degrees.</p><br><p>The function uses the signs of <b>x</b> and <b>y</b> to compute the correct quadrant for the result.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Abs":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Abs\",\n\t\t\t\"link\": \"Abs\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Abs</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Abs</b>( <b>x</b> )</p><br><p>Function <b>Abs</b>#( <b>x</b># )</p>\",\"parameters\":\"<p><b>x</b> - input value.</p>\",\"description\":\"<p>Returns the absolute value of <b>x</b>.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Ceil":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Ceil\",\n\t\t\t\"link\": \"Ceil\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Ceil</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Ceil</b>#( <b>x</b># )</p>\",\"parameters\":\"<p><b>x</b> - floatint point value.</p>\",\"description\":\"<p>Returns the smallest integral value that is not less than <b>x</b>.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Clamp":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Clamp\",\n\t\t\t\"link\": \"Clamp\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Clamp</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Clamp</b>( <b>x</b>, <b>min</b>, <b>max</b> )</p><br><p>Function <b>Clamp</b>#( <b>x</b>#, <b>min</b>#, <b>max</b># )</p>\",\"parameters\":\"<p><b>x</b> - value to clamp</p><br><p><b>min</b> - minimum returnable value</p><br><p><b>max</b> - maximum returnable value</p>\",\"description\":\"<p>Clamps <b>x</b> to the range <b>min</b> through <b>max</b> inclusive.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Cos":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Cos\",\n\t\t\t\"link\": \"Cos\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Cos</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Cos</b>#( <b>x</b># )</p>\",\"parameters\":\"<p><b>x</b> - angle in degrees.</p>\",\"description\":\"<p>Returns the cosine of <b>x</b>, expressed in degrees.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Floor":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Floor\",\n\t\t\t\"link\": \"Floor\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Floor</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Floor</b>#( <b>x</b># )</p>\",\"parameters\":\"<p><b>x</b> - floatint point value.</p>\",\"description\":\"<p>Returns the largest integral value that is not greater than <b>x</b>.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.HALFPI":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"HALFPI\",\n\t\t\t\"link\": \"HALFPI\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Const <strong>HALFPI</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Const <b>HALFPI</b>#=1.57079633</p>\",\"description\":\"<p><b>PI</b> times a half.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Log":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Log\",\n\t\t\t\"link\": \"Log\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Log</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Log</b>( <b>x</b># )</p>\",\"parameters\":\"<p><b>x</b> - floating point value.</p>\",\"description\":\"<p>Returns the natural logarithm of <b>x</b>.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Max":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Max\",\n\t\t\t\"link\": \"Max\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Max</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Max</b>( <b>x</b>, <b>y</b> )</p><br><p>Function <b>Max</b>#( <b>x</b>#, <b>y</b># )</p>\",\"parameters\":\"<p><b>x</b>, <b>y</b> - input values.</p>\",\"description\":\"<p>Returns the maximum of <b>x</b> and <b>y</b>.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Min":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Min\",\n\t\t\t\"link\": \"Min\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Min</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Min</b>( <b>x</b>, <b>y</b> )</p><br><p>Function <b>Min</b>#( <b>x</b>#, <b>y</b># )</p>\",\"parameters\":\"<p><b>x</b>, <b>y</b> - input values.</p>\",\"description\":\"<p>Returns the minimum of <b>x</b> and <b>y</b>.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.PI":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"PI\",\n\t\t\t\"link\": \"PI\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Const <strong>PI</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Const <b>PI</b>#=3.14159265</p>\",\"description\":\"<p>The ratio of any circle's circumference to its diameter.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Pow":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Pow\",\n\t\t\t\"link\": \"Pow\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Pow</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Pow</b>#( <b>x</b>#, <b>y</b># )</p>\",\"parameters\":\"<p><b>x</b>, <b>y</b> - float point values.</p>\",\"description\":\"<p>Returns <b>x</b> to the power of <b>y</b>.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Sgn":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Sgn\",\n\t\t\t\"link\": \"Sgn\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Sgn</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Sgn</b>( <b>x</b> )</p><br><p>Function <b>Sgn</b>#( <b>x</b># )</p>\",\"parameters\":\"<p><b>x</b> - input value.</p>\",\"description\":\"<p>Returns -1 if <b>x</b> is negative, +1 if <b>x</b> is greater than zero or 0 if <b>x</b> is equal to zero.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Sin":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Sin\",\n\t\t\t\"link\": \"Sin\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Sin</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Sin</b>#( <b>x</b># )</p>\",\"parameters\":\"<p><b>x</b> - angle in degrees.</p>\",\"description\":\"<p>Returns the sine of <b>x</b>, expressed in degrees.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Sqrt":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Sqrt\",\n\t\t\t\"link\": \"Sqrt\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Sqrt</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Sqrt</b>#( <b>x</b># )</p>\",\"parameters\":\"<p><b>x</b> - floatint point value.</p>\",\"description\":\"<p>Returns the square root of <b>x</b>.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.TWOPI":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"TWOPI\",\n\t\t\t\"link\": \"TWOPI\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Const <strong>TWOPI</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Const <b>TWOPI</b>#=6.28318531</p>\",\"description\":\"<p><b>PI</b> times 2.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.math.Tan":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.math\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Tan\",\n\t\t\t\"link\": \"Tan\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Tan</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Tan</b>#( <b>x</b># )</p>\",\"parameters\":\"<p><b>x</b> - angle in degrees.</p>\",\"description\":\"<p>Returns the tangent of <b>x</b>, expressed in degrees.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.random.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.random\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>monkey.random</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The random module contains functions for generating random numbers.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.random.contents":"{\"globals\":[{\"name\":\"Seed\",\"link\":\"Seed\"}],\"functions\":[{\"name\":\"Rnd\",\"link\":\"Rnd\"}]}",
"monkey.random.Rnd":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.random\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Rnd\",\n\t\t\t\"link\": \"Rnd\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Function <strong>Rnd</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Function <b>Rnd</b>#()</p><br><p>Function <b>Rnd</b>#( <b>range</b># )</p><br><p>Function <b>Rnd</b>#( <b>low</b>#, <b>high</b># )</p>\",\"description\":\"<p>The first version returns a random float in the range 0 (inclusive) to 1 (exclusive).</p><br><p>The second version returns a random float in the range 0 (inclusive) to <b>range</b> (exclusive).</p><br><p>The third version returns a random float in the range <b>low</b> (inclusive) to <b>high</b> (exclusive).</p>\"\n\t\t}\n\t]\n}\n",
"monkey.random.Seed":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.random\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Seed\",\n\t\t\t\"link\": \"Seed\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Global <strong>Seed</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Global <b>Seed</b></p>\",\"description\":\"<p>The current random number generator seed.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.set.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>monkey.set</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The set module provides support for the <i>set</i> data structure.</p><br><p>A set is a container style object that provides a mechanism for keeping track of a number of objects.</p><br><p>Each object in a set occurs exactly once - inserting the same object into a set multiple times does not result in the set containing multiple references to the same object.</p><br><p>Sets are implemented behind the scenes using <b>Map</b> objects, and are just as efficient at insertng, removing and finding objects.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.set.contents":"{\"classes\":[{\"name\":\"FloatSet\",\"link\":\"FloatSet\"},{\"name\":\"IntSet\",\"link\":\"IntSet\"},{\"name\":\"Set\",\"link\":\"Set\"},{\"name\":\"Set.Clear\",\"link\":\"Set.Clear\"},{\"name\":\"Set.Contains\",\"link\":\"Set.Contains\"},{\"name\":\"Set.Count\",\"link\":\"Set.Count\"},{\"name\":\"Set.Insert\",\"link\":\"Set.Insert\"},{\"name\":\"Set.IsEmpty\",\"link\":\"Set.IsEmpty\"},{\"name\":\"Set.New\",\"link\":\"Set.New\"},{\"name\":\"Set.ObjectEnumerator\",\"link\":\"Set.ObjectEnumerator\"},{\"name\":\"Set.Remove\",\"link\":\"Set.Remove\"},{\"name\":\"StringSet\",\"link\":\"StringSet\"}]}",
"monkey.set.FloatSet":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"FloatSet\",\n\t\t\t\"link\": \"FloatSet\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>FloatSet</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>FloatSet</b> Extends Set&lt;FloatObject&gt;</p>\"\n\t\t}\n\t]\n}\n",
"monkey.set.IntSet":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"IntSet\",\n\t\t\t\"link\": \"IntSet\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>IntSet</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>IntSet</b> Extends Set&lt;IntObject&gt;</p>\",\"description\":\"\"\n\t\t}\n\t]\n}\n",
"monkey.set.Set":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Set\",\n\t\t\t\"link\": \"Set\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>Set</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>Set</b>&lt; <b>Type</b> &gt;</p>\",\"description\":\"<p>The abstract <b>Set</b> class.</p><br><p>Extending classes must invoke <b>Super</b>.@New with an instance of a map object.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.set.Set.Clear":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Set.Clear\",\n\t\t\t\"link\": \"Set.Clear\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Clear</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Clear</b>()</p>\",\"description\":\"<p>Removes all objects from the set.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.set.Set.Contains":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Set.Contains\",\n\t\t\t\"link\": \"Set.Contains\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Contains</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Contains</b>?( <b>value</b>:Type )</p>\",\"parameters\":\"<p><b>value</b> - value to check</p>\",\"description\":\"<p>Return true if the specified <b>value</b> is contained in the set.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.set.Set.Count":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Set.Count\",\n\t\t\t\"link\": \"Set.Count\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Count</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Count</b>()</p>\",\"description\":\"<p>Counts and returns the number of objects in the set.</p><br><p>Note that this method takes O(N) time - that is, it must visit each object in the set.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.set.Set.Insert":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Set.Insert\",\n\t\t\t\"link\": \"Set.Insert\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Insert</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Insert</b>( <b>value</b>:Type )</p>\",\"parameters\":\"<p><b>value</b> - value to insert.</p>\",\"description\":\"<p>Inserts <b>value</b> into the set.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.set.Set.IsEmpty":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Set.IsEmpty\",\n\t\t\t\"link\": \"Set.IsEmpty\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>IsEmpty</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>IsEmpty</b>?()</p>\",\"description\":\"<p>Returns true if the set is empty, ie: contains no objects.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.set.Set.New":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Set.New\",\n\t\t\t\"link\": \"Set.New\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>New</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>New</b>( map:Map&lt;Type,Object&gt; )</p>\",\"description\":\"<p>Extending classes should invoke this method with a valid map object to be used to implement the set.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.set.Set.ObjectEnumerator":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Set.ObjectEnumerator\",\n\t\t\t\"link\": \"Set.ObjectEnumerator\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>ObjectEnumerator</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>ObjectEnumerator</b>:Object()</p>\",\"desciption\":\"<p>Returns an enumerator object that allows sets to be used with <b>For</b>...@EachIn loops.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.set.Set.Remove":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Set.Remove\",\n\t\t\t\"link\": \"Set.Remove\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Remove</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Remove</b>( <b>value</b>:Type )</p>\",\"parameters\":\"<p><b>value</b> - value to remove.</p>\",\"description\":\"<p>Removes <b>value</b> from the set.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.set.StringSet":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.set\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"StringSet\",\n\t\t\t\"link\": \"StringSet\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>StringSet</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>StringSet</b> Extends Set&lt;StringObject&gt;</p>\"\n\t\t}\n\t]\n}\n",
"monkey.stack.main":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Module <strong>monkey.stack</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"<p>The stack module provides support for <i>stacks</i>.</p><br><p>Stacks provide 2 basic operations - <i>push</i> and <i>pop</i>. Pushing an item on a stack adds the item to the top of the stack, while popping an item removes the item from the top of the stack and returns it.</p><br><p>Stacks may also be efficiently indexed using an integer index, and elements may be inserted and removed. This allows stacks to also be used as a dynamic array (an array where the length can change), much like a C++ <i>vector</i>, or C# <i>ArrayList</i>.</p><br><p>The stack module includes the main <b>Stack</b> class, as well as the convenience classes <b>IntStack</b>, <b>FloatStack</b> and <b>StringStack</b>.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.contents":"{\"classes\":[{\"name\":\"FloatStack\",\"link\":\"FloatStack\"},{\"name\":\"FloatStack.ToArray\",\"link\":\"FloatStack.ToArray\"},{\"name\":\"IntStack\",\"link\":\"IntStack\"},{\"name\":\"IntStack.ToArray\",\"link\":\"IntStack.ToArray\"},{\"name\":\"Stack\",\"link\":\"Stack\"},{\"name\":\"Stack.Clear\",\"link\":\"Stack.Clear\"},{\"name\":\"Stack.Enumerator\",\"link\":\"Stack.Enumerator\"},{\"name\":\"Stack.Get\",\"link\":\"Stack.Get\"},{\"name\":\"Stack.Insert\",\"link\":\"Stack.Insert\"},{\"name\":\"Stack.IsEmpty\",\"link\":\"Stack.IsEmpty\"},{\"name\":\"Stack.Length\",\"link\":\"Stack.Length\"},{\"name\":\"Stack.Pop\",\"link\":\"Stack.Pop\"},{\"name\":\"Stack.Push\",\"link\":\"Stack.Push\"},{\"name\":\"Stack.Remove\",\"link\":\"Stack.Remove\"},{\"name\":\"Stack.RemoveEach\",\"link\":\"Stack.RemoveEach\"},{\"name\":\"Stack.Set\",\"link\":\"Stack.Set\"},{\"name\":\"Stack.Top\",\"link\":\"Stack.Top\"},{\"name\":\"StringStack\",\"link\":\"StringStack\"},{\"name\":\"StringStack.Join\",\"link\":\"StringStack.Join\"},{\"name\":\"StringStack.ToArray\",\"link\":\"StringStack.ToArray\"}]}",
"monkey.stack.FloatStack":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"FloatStack\",\n\t\t\t\"link\": \"FloatStack\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>FloatStack</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>FloatStack</b> Extends Stack&lt;FloatObject&gt;</p>\",\"description\":\"<p><b>FloatStack</b> is a convenience class for dealing with stacks of floats.</p>\",\"example\":\"<p><pre>\\nFunction Main()\\n\\n\\tLocal vec:=New FloatStack\\n\\t\\n\\tFor Local i#=1 To 10\\n\\t\\tvec.AddLast i\\n\\tNext\\n\\t\\n\\tFor Local i#=Eachin vec\\n\\t\\tPrint i\\n\\tNext\\n\\nEnd\\n</pre>\\n</p>\"\n\t\t}\n\t]\n}\n",
"monkey.stack.FloatStack.ToArray":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"FloatStack.ToArray\",\n\t\t\t\"link\": \"FloatStack.ToArray\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>ToArray</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>ToArray</b>:Float[]()</p>\",\"description\":\"<p>Converts the elements of the stack to an array of floats.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.IntStack":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"IntStack\",\n\t\t\t\"link\": \"IntStack\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>IntStack</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>IntStack</b> Extends Stack&lt;IntObject&gt;</p>\",\"description\":\"<p><b>IntStack</b> is a convenience class for dealing with stacks of ints.</p>\",\"example\":\"<p><pre>\\nFunction Main()\\n\\n\\tLocal vec:=New IntStack\\n\\t\\n\\tFor Local i=1 To 10\\n\\t\\tvec.AddLast i\\n\\tNext\\n\\t\\n\\tFor Local i=Eachin vec\\n\\t\\tPrint i\\n\\tNext\\n\\nEnd\\n</pre>\\n</p>\"\n\t\t}\n\t]\n}\n",
"monkey.stack.IntStack.ToArray":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"IntStack.ToArray\",\n\t\t\t\"link\": \"IntStack.ToArray\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>ToArray</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>ToArray</b>:Int[]()</p>\",\"description\":\"<p>Converts the elements of the stack to an array of ints.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack\",\n\t\t\t\"link\": \"Stack\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>Stack</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>Stack</b>&lt; <b>Type</b> &gt;</p>\",\"parameters\":\"<p><b>Type</b> - The class of the objects contained in the stack.</p>\",\"description\":\"<p>The stack class manages the elements of a stack.</p>\"\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack.Clear":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack.Clear\",\n\t\t\t\"link\": \"Stack.Clear\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Clear</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Clear</b>()</p>\",\"description\":\"<p>Removes all items from the stack.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack.Enumerator":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack.Enumerator\",\n\t\t\t\"link\": \"Stack.Enumerator\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Enumerator</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Enumerator</b>:Object()</p>\",\"description\":\"<p>Returns an enumerator object suitable for use with <b>EachIn</b> loops.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack.Get":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack.Get\",\n\t\t\t\"link\": \"Stack.Get\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Get</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Get</b>:Type( <b>index</b> )</p>\",\"parameters\":\"<p><b>index</b> - valid integer index. Must be &gt;=0 and &lt;length.</p>\",\"description\":\"<p>Returns the element at the specified index.</p><br><p>An index of 0 represents the bottom of the stack, and an index of length-1 represents the top.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack.Insert":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack.Insert\",\n\t\t\t\"link\": \"Stack.Insert\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Insert</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Insert</b>( <b>index</b>, <b>value</b>:Type )</p>\",\"parameters\":\"<p><b>index</b> - valid integer index. Must be &gt;=0 and &lt;length.</p><br><p><b>value</b> - value to insert.</p>\",\"description\":\"<p>Inserts <b>value</b> into the stack, shifting existing elements up if necessary.</p><br><p>This will increase the length of the stack by 1.</p><br><p>An index of 0 represents the bottom of the stack, and an index of length-1 represents the top.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack.IsEmpty":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack.IsEmpty\",\n\t\t\t\"link\": \"Stack.IsEmpty\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>IsEmpty</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>IsEmpty</b>?() Property</p>\",\"description\":\"<p>Return true if the stack is empty - ie: it contains no items.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack.Length":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack.Length\",\n\t\t\t\"link\": \"Stack.Length\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Length</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Length</b>() Property</p>\",\"description\":\"<p>Returns the number of items on the stack.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack.Pop":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack.Pop\",\n\t\t\t\"link\": \"Stack.Pop\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Pop</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Pop</b>:Type()</p>\",\"description\":\"<p>Removes the item at the top of the stack and returns it.</p><br><p>This will decrease the length of the stack by 1.</p><br><p>If the stack is empty, the behaviour of <b>Pop</b> is undefined.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack.Push":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack.Push\",\n\t\t\t\"link\": \"Stack.Push\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Push</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Push</b>( <b>value</b>:Type )</p>\",\"parameters\":\"<p><b>value</b> - value to push.</p>\",\"description\":\"<p>Pushes a value on the top of the stack.</p><br><p>This will increase the length of the stack by 1.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack.Remove":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack.Remove\",\n\t\t\t\"link\": \"Stack.Remove\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Remove</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Remove</b>( <b>index</b> )</p>\",\"parameters\":\"<p><b>index</b> - valid integer index. Must be&gt;=0 and &lt;length.</p>\",\"description\":\"<p>Removes the value at the specified index from the stack, shifting existing elements down if necessary.</p><br><p>This will decrease the length of the stack by 1.</p><br><p>An index of 0 represents the bottom of the stack, and an index of length-1 represents the top.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack.RemoveEach":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack.RemoveEach\",\n\t\t\t\"link\": \"Stack.RemoveEach\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>RemoveEach</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>RemoveEach</b>( <b>value</b>:Type )</p>\",\"parameters\":\"<p><b>value</b> - value to remove.</p>\",\"description\":\"<p>Finds and removes all elements in the stack equal to <b>value</b>, shifting existing elements down if necessary.</p><br><p>This will decrease the length of the stack by the number of occurances of <b>value</b> in the stack.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack.Set":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack.Set\",\n\t\t\t\"link\": \"Stack.Set\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Set</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Set</b>( <b>index</b>,@value:Type )</p>\",\"parameters\":\"<p><b>index</b> - valid integer index. Must be &gt;=0 and &lt;length.</p><br><p><b>value</b> - value to set.</p>\",\"decsription\":\"<p>Overwrites the existing value at index <b>index</b> with the new value <b>value</b>.</p><br><p>An index of 0 represents the bottom of the stack, and an index of length-1 represents the top.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.Stack.Top":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"Stack.Top\",\n\t\t\t\"link\": \"Stack.Top\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Top</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Top</b>:Type()</p>\",\"description\":\"<p>Returns the item at the top of the stack.</p><br><p>If the stack is empty, the behaviour of <b>Top</b> is undefined.</p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.StringStack":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"StringStack\",\n\t\t\t\"link\": \"StringStack\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Class <strong>StringStack</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Class <b>StringStack</b> Extends Stack&lt;StringObject&gt;</p>\",\"description\":\"<p><b>StringStack</b> is a convenience class for dealing with stacks of strings.</p>\",\"example\":\"<p><pre>\\nFunction Main()\\n\\n\\tLocal vec:=New StringStack\\n\\t\\n\\tvec.AddLast \\\"Hello\\\"\\n\\tvec.AddLast \\\"there\\\"\\n\\tvec.AddLast \\\"this\\\"\\n\\tvec.AddLast \\\"is\\\"\\n\\tvec.AddLast \\\"a\\\"\\n\\tvec.AddLast \\\"StringStack\\\"\\n\\t\\n\\tPrint vec.Join( \\\" \\\" )\\n\\nEnd\\n</pre>\\n</p>\"\n\t\t}\n\t]\n}\n",
"monkey.stack.StringStack.Join":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"StringStack.Join\",\n\t\t\t\"link\": \"StringStack.Join\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>Join</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>Join</b>$( <b>separator</b>$ )</p>\",\"parameters\":\"<p><b>separator</b> - string to use to separate elements.</p>\",\"description\":\"<p>Concatenates the elements of the stack and joins them together with <b>separator</b>.</p><br><p>If you are performing lots of string concatentation, the <b>Join</b> method is often a much more efficient to </p>\"\n\n\t\t}\n\t]\n}\n",
"monkey.stack.StringStack.ToArray":"{\n\t\"breadcrumbs\": [\n\t\t{\n\t\t\t\"name\": \"monkey.stack\",\n\t\t\t\"link\": \"#\" \n\t\t},\n\t\t{\n\t\t\t\"name\": \"StringStack.ToArray\",\n\t\t\t\"link\": \"StringStack.ToArray\" \n\t\t}\n\t],\n\t\"definition\": [\n\t\t{\n\t\t\t\"heading\": \"Method <strong>ToArray</strong>\"\n\t\t\t\n\t\t\t,\"introduction\":\"\",\"syntax\":\"<p>Method <b>ToArray</b>:String[]()</p>\",\"description\":\"<p>Converts the elements of the stack to an array of strings.</p>\"\n\n\t\t}\n\t]\n}\n",
"modules.list":"{\"modules\":[{\"name\":\"mojo\",\"link\":\"mojo\"},{\"name\":\"mojo.app\",\"link\":\"mojo.app\"},{\"name\":\"mojo.audio\",\"link\":\"mojo.audio\"},{\"name\":\"mojo.graphics\",\"link\":\"mojo.graphics\"},{\"name\":\"mojo.input\",\"link\":\"mojo.input\"},{\"name\":\"monkey\",\"link\":\"monkey\"},{\"name\":\"monkey.lang\",\"link\":\"monkey.lang\"},{\"name\":\"monkey.list\",\"link\":\"monkey.list\"},{\"name\":\"monkey.map\",\"link\":\"monkey.map\"},{\"name\":\"monkey.math\",\"link\":\"monkey.math\"},{\"name\":\"monkey.random\",\"link\":\"monkey.random\"},{\"name\":\"monkey.set\",\"link\":\"monkey.set\"},{\"name\":\"monkey.stack\",\"link\":\"monkey.stack\"}]}"};